[
    {
        "DOC": "/Users/insality/code/defold/core",
        "defines": [],
        "fields": [],
        "name": "LuaLS",
        "type": "luals.config"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            2,
                            54
                        ],
                        "start": [
                            2,
                            42
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    2,
                    54
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "druid.widget.property_checkbox",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        39,
                        20
                    ],
                    "start": [
                        39,
                        15
                    ],
                    "type": "getlocal",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    39,
                    12
                ],
                "name": "_value",
                "start": [
                    39,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        6,
                        29
                    ],
                    "start": [
                        6,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                29
                            ],
                            "start": [
                                6,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.button"
                        }
                    ],
                    "view": "druid.button"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    6,
                    29
                ],
                "name": "button",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "druid.button",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        25,
                        53
                    ],
                    "start": [
                        25,
                        18
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    25,
                    15
                ],
                "name": "container",
                "start": [
                    25,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        30
                    ],
                    "start": [
                        4,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                30
                            ],
                            "start": [
                                4,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "druid.instance"
                        }
                    ],
                    "view": "druid.instance"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    4,
                    30
                ],
                "name": "druid",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "druid.instance",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                51,
                                8
                            ],
                            "name": "self",
                            "start": [
                                51,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_checkbox"
                        }
                    ],
                    "finish": [
                        53,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_checkbox:get_value()\n  -> boolean"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    51,
                    20
                ],
                "name": "get_value",
                "start": [
                    51,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        14,
                        34
                    ],
                    "start": [
                        14,
                        13
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    14,
                    10
                ],
                "name": "icon",
                "start": [
                    14,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                11,
                                8
                            ],
                            "name": "self",
                            "start": [
                                11,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_checkbox"
                        }
                    ],
                    "finish": [
                        30,
                        3
                    ],
                    "start": [
                        11,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_checkbox:init()"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    11,
                    15
                ],
                "name": "init",
                "start": [
                    11,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set the callback function for when the checkbox value changes",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                70,
                                8
                            ],
                            "name": "self",
                            "start": [
                                70,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_checkbox"
                        },
                        {
                            "finish": [
                                70,
                                29
                            ],
                            "name": "callback",
                            "start": [
                                70,
                                21
                            ],
                            "type": "local",
                            "view": "function"
                        }
                    ],
                    "desc": "Set the callback function for when the checkbox value changes",
                    "finish": [
                        72,
                        3
                    ],
                    "rawdesc": "Set the callback function for when the checkbox value changes",
                    "start": [
                        70,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_checkbox:on_change(callback: function)"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    70,
                    20
                ],
                "name": "on_change",
                "rawdesc": "Set the callback function for when the checkbox value changes",
                "start": [
                    70,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        29,
                        38
                    ],
                    "start": [
                        29,
                        24
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    29,
                    21
                ],
                "name": "on_change_value",
                "start": [
                    29,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                56,
                                8
                            ],
                            "name": "self",
                            "start": [
                                56,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_checkbox"
                        }
                    ],
                    "finish": [
                        58,
                        3
                    ],
                    "start": [
                        56,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_checkbox:on_click()"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    56,
                    19
                ],
                "name": "on_click",
                "start": [
                    56,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        3,
                        19
                    ],
                    "start": [
                        3,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                3,
                                19
                            ],
                            "start": [
                                3,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    3,
                    19
                ],
                "name": "root",
                "start": [
                    3,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        7,
                        23
                    ],
                    "start": [
                        7,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                23
                            ],
                            "start": [
                                7,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    7,
                    23
                ],
                "name": "selected",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set the enabled state of the checkbox",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                77,
                                8
                            ],
                            "name": "self",
                            "start": [
                                77,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_checkbox"
                        },
                        {
                            "finish": [
                                77,
                                30
                            ],
                            "name": "enabled",
                            "start": [
                                77,
                                23
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "desc": "Set the enabled state of the checkbox",
                    "finish": [
                        79,
                        3
                    ],
                    "rawdesc": "Set the enabled state of the checkbox",
                    "start": [
                        77,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_checkbox:set_enabled(enabled: boolean)"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    77,
                    22
                ],
                "name": "set_enabled",
                "rawdesc": "Set the enabled state of the checkbox",
                "start": [
                    77,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set the text property of the checkbox",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                63,
                                8
                            ],
                            "name": "self",
                            "start": [
                                63,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_checkbox"
                        },
                        {
                            "finish": [
                                63,
                                33
                            ],
                            "name": "text",
                            "start": [
                                63,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Set the text property of the checkbox",
                    "finish": [
                        65,
                        3
                    ],
                    "rawdesc": "Set the text property of the checkbox",
                    "start": [
                        63,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_checkbox:set_text_property(text: string)"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    63,
                    28
                ],
                "name": "set_text_property",
                "rawdesc": "Set the text property of the checkbox",
                "start": [
                    63,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                34,
                                8
                            ],
                            "name": "self",
                            "start": [
                                34,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_checkbox"
                        },
                        {
                            "finish": [
                                34,
                                26
                            ],
                            "name": "value",
                            "start": [
                                34,
                                21
                            ],
                            "type": "local",
                            "view": "boolean"
                        },
                        {
                            "finish": [
                                34,
                                38
                            ],
                            "name": "is_instant",
                            "start": [
                                34,
                                28
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        47,
                        3
                    ],
                    "start": [
                        34,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_checkbox:set_value(value: boolean, is_instant: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    34,
                    20
                ],
                "name": "set_value",
                "start": [
                    34,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        30
                    ],
                    "start": [
                        5,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                30
                            ],
                            "start": [
                                5,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_checkbox.lua",
                "finish": [
                    5,
                    30
                ],
                "name": "text_name",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            }
        ],
        "name": "druid.widget.property_checkbox",
        "type": "type",
        "view": "druid.widget.property_checkbox"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            2,
                            51
                        ],
                        "start": [
                            2,
                            39
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    2,
                    51
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "druid.widget.property_input",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        6,
                        29
                    ],
                    "start": [
                        6,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                29
                            ],
                            "start": [
                                6,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.button"
                        }
                    ],
                    "view": "druid.button"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    6,
                    29
                ],
                "name": "button",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "druid.button",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        35
                    ],
                    "start": [
                        4,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                35
                            ],
                            "start": [
                                4,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    4,
                    35
                ],
                "name": "container",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        7,
                        30
                    ],
                    "start": [
                        7,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                30
                            ],
                            "start": [
                                7,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "druid.instance"
                        }
                    ],
                    "view": "druid.instance"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    7,
                    30
                ],
                "name": "druid",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "druid.instance",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                11,
                                8
                            ],
                            "name": "self",
                            "start": [
                                11,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_input"
                        }
                    ],
                    "finish": [
                        30,
                        3
                    ],
                    "start": [
                        11,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_input:init()"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    11,
                    15
                ],
                "name": "init",
                "start": [
                    11,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                51,
                                8
                            ],
                            "name": "self",
                            "start": [
                                51,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_input"
                        },
                        {
                            "finish": [
                                51,
                                29
                            ],
                            "name": "callback",
                            "start": [
                                51,
                                21
                            ],
                            "type": "local",
                            "view": "fun(self: druid.widget.property_input, text: string)"
                        },
                        {
                            "finish": [
                                51,
                                47
                            ],
                            "name": "callback_context",
                            "start": [
                                51,
                                31
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        53,
                        3
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_input:on_change(callback: fun(self: druid.widget.property_input, text: string), callback_context: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    51,
                    20
                ],
                "name": "on_change",
                "start": [
                    51,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "fun(text: string)",
                "extends": {
                    "finish": [
                        8,
                        31
                    ],
                    "start": [
                        8,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                8,
                                31
                            ],
                            "start": [
                                8,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "event"
                        }
                    ],
                    "view": "event"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    8,
                    31
                ],
                "name": "on_change_value",
                "rawdesc": "fun(text: string)",
                "start": [
                    8,
                    10
                ],
                "type": "doc.field",
                "view": "event",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        19,
                        58
                    ],
                    "start": [
                        19,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    19,
                    16
                ],
                "name": "rich_input",
                "start": [
                    19,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        3,
                        19
                    ],
                    "start": [
                        3,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                3,
                                19
                            ],
                            "start": [
                                3,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    3,
                    19
                ],
                "name": "root",
                "start": [
                    3,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        42
                    ],
                    "start": [
                        16,
                        17
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    16,
                    14
                ],
                "name": "selected",
                "start": [
                    16,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                35,
                                8
                            ],
                            "name": "self",
                            "start": [
                                35,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_input"
                        },
                        {
                            "finish": [
                                35,
                                33
                            ],
                            "name": "text",
                            "start": [
                                35,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        38,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_input"
                        }
                    ],
                    "start": [
                        35,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_input:set_text_property(text: string)\n  -> druid.widget.property_input"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    35,
                    28
                ],
                "name": "set_text_property",
                "start": [
                    35,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                43,
                                8
                            ],
                            "name": "self",
                            "start": [
                                43,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_input"
                        },
                        {
                            "finish": [
                                43,
                                30
                            ],
                            "name": "text",
                            "start": [
                                43,
                                26
                            ],
                            "type": "local",
                            "view": "string|number"
                        }
                    ],
                    "finish": [
                        46,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_input"
                        }
                    ],
                    "start": [
                        43,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_input:set_text_value(text: string|number)\n  -> druid.widget.property_input"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    43,
                    25
                ],
                "name": "set_text_value",
                "start": [
                    43,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        30
                    ],
                    "start": [
                        5,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                30
                            ],
                            "start": [
                                5,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_input.lua",
                "finish": [
                    5,
                    30
                ],
                "name": "text_name",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            }
        ],
        "name": "druid.widget.property_input",
        "type": "type",
        "view": "druid.widget.property_input"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            2,
                            65
                        ],
                        "start": [
                            2,
                            53
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    2,
                    65
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "druid.widget.property_left_right_selector",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `koef` — -1 0 1, on 0 will not move",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                144,
                                8
                            ],
                            "name": "self",
                            "start": [
                                144,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        },
                        {
                            "desc": "-1 0 1, on 0 will not move",
                            "finish": [
                                144,
                                24
                            ],
                            "name": "koef",
                            "rawdesc": "-1 0 1, on 0 will not move",
                            "start": [
                                144,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "@*param* `koef` — -1 0 1, on 0 will not move",
                    "finish": [
                        161,
                        3
                    ],
                    "start": [
                        144,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:add_step(koef: number)"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    144,
                    19
                ],
                "name": "add_step",
                "start": [
                    144,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        181,
                        2
                    ],
                    "start": [
                        177,
                        19
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    177,
                    16
                ],
                "name": "array_type",
                "start": [
                    177,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        6,
                        29
                    ],
                    "start": [
                        6,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                29
                            ],
                            "start": [
                                6,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.button"
                        }
                    ],
                    "view": "druid.button"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    6,
                    29
                ],
                "name": "button",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "druid.button",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        22,
                        77
                    ],
                    "start": [
                        22,
                        20
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    22,
                    17
                ],
                "name": "button_left",
                "start": [
                    22,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        25,
                        80
                    ],
                    "start": [
                        25,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    25,
                    18
                ],
                "name": "button_right",
                "start": [
                    25,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        30,
                        53
                    ],
                    "start": [
                        30,
                        18
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    30,
                    15
                ],
                "name": "container",
                "start": [
                    30,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        30
                    ],
                    "start": [
                        4,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                30
                            ],
                            "start": [
                                4,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "druid.instance"
                        }
                    ],
                    "view": "druid.instance"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    4,
                    30
                ],
                "name": "druid",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "druid.instance",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                205,
                                8
                            ],
                            "name": "self",
                            "start": [
                                205,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        }
                    ],
                    "finish": [
                        207,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string|number"
                        }
                    ],
                    "start": [
                        205,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:get_value()\n  -> string|number"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    205,
                    20
                ],
                "name": "get_value",
                "start": [
                    205,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                13,
                                8
                            ],
                            "name": "self",
                            "start": [
                                13,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        }
                    ],
                    "finish": [
                        33,
                        3
                    ],
                    "start": [
                        13,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:init()"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    13,
                    15
                ],
                "name": "init",
                "start": [
                    13,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        170,
                        2
                    ],
                    "start": [
                        165,
                        20
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    165,
                    17
                ],
                "name": "number_type",
                "start": [
                    165,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                134,
                                8
                            ],
                            "name": "self",
                            "start": [
                                134,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        }
                    ],
                    "finish": [
                        136,
                        3
                    ],
                    "start": [
                        134,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:on_button_left()"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    134,
                    25
                ],
                "name": "on_button_left",
                "start": [
                    134,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                138,
                                8
                            ],
                            "name": "self",
                            "start": [
                                138,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        }
                    ],
                    "finish": [
                        140,
                        3
                    ],
                    "start": [
                        138,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:on_button_right()"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    138,
                    26
                ],
                "name": "on_button_right",
                "start": [
                    138,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "fun(value: string|number)",
                "extends": {
                    "finish": [
                        9,
                        31
                    ],
                    "start": [
                        9,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                9,
                                31
                            ],
                            "start": [
                                9,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "event"
                        }
                    ],
                    "view": "event"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    9,
                    31
                ],
                "name": "on_change_value",
                "rawdesc": "fun(value: string|number)",
                "start": [
                    9,
                    10
                ],
                "type": "doc.field",
                "view": "event",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        3,
                        19
                    ],
                    "start": [
                        3,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                3,
                                19
                            ],
                            "start": [
                                3,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    3,
                    19
                ],
                "name": "root",
                "start": [
                    3,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        7,
                        23
                    ],
                    "start": [
                        7,
                        19
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                23
                            ],
                            "start": [
                                7,
                                19
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    7,
                    23
                ],
                "name": "selected",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                176,
                                8
                            ],
                            "name": "self",
                            "start": [
                                176,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        },
                        {
                            "finish": [
                                176,
                                31
                            ],
                            "name": "array",
                            "start": [
                                176,
                                26
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                176,
                                40
                            ],
                            "name": "is_loop",
                            "start": [
                                176,
                                33
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                176,
                                47
                            ],
                            "name": "steps",
                            "start": [
                                176,
                                42
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        184,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_left_right_selector"
                        }
                    ],
                    "start": [
                        176,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:set_array_type(array: any, is_loop: any, steps: any)\n  -> druid.widget.property_left_right_selector"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    176,
                    25
                ],
                "name": "set_array_type",
                "start": [
                    176,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                164,
                                8
                            ],
                            "name": "self",
                            "start": [
                                164,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        },
                        {
                            "finish": [
                                164,
                                30
                            ],
                            "name": "min",
                            "start": [
                                164,
                                27
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                164,
                                35
                            ],
                            "name": "max",
                            "start": [
                                164,
                                32
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                164,
                                44
                            ],
                            "name": "is_loop",
                            "start": [
                                164,
                                37
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                164,
                                51
                            ],
                            "name": "steps",
                            "start": [
                                164,
                                46
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        173,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_left_right_selector"
                        }
                    ],
                    "start": [
                        164,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:set_number_type(min: any, max: any, is_loop: any, steps: any)\n  -> druid.widget.property_left_right_selector"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    164,
                    26
                ],
                "name": "set_number_type",
                "start": [
                    164,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                36,
                                8
                            ],
                            "name": "self",
                            "start": [
                                36,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        },
                        {
                            "finish": [
                                36,
                                24
                            ],
                            "name": "text",
                            "start": [
                                36,
                                20
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        39,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_left_right_selector"
                        }
                    ],
                    "start": [
                        36,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:set_text(text: any)\n  -> druid.widget.property_left_right_selector"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    36,
                    19
                ],
                "name": "set_text",
                "start": [
                    36,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                188,
                                8
                            ],
                            "name": "self",
                            "start": [
                                188,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_left_right_selector"
                        },
                        {
                            "finish": [
                                188,
                                26
                            ],
                            "name": "value",
                            "start": [
                                188,
                                21
                            ],
                            "type": "local",
                            "view": "string|number"
                        },
                        {
                            "finish": [
                                188,
                                38
                            ],
                            "name": "is_instant",
                            "start": [
                                188,
                                28
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        201,
                        3
                    ],
                    "start": [
                        188,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_left_right_selector:set_value(value: string|number, is_instant: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    188,
                    20
                ],
                "name": "set_value",
                "start": [
                    188,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        30
                    ],
                    "start": [
                        5,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                30
                            ],
                            "start": [
                                5,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    5,
                    30
                ],
                "name": "text_name",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        21,
                        52
                    ],
                    "start": [
                        21,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    21,
                    16
                ],
                "name": "text_value",
                "start": [
                    21,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        8,
                        29
                    ],
                    "start": [
                        8,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                8,
                                22
                            ],
                            "start": [
                                8,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        },
                        {
                            "finish": [
                                8,
                                29
                            ],
                            "start": [
                                8,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "string|number"
                },
                "file": "widget/insality/properties_panel/properties/property_left_right_selector.lua",
                "finish": [
                    8,
                    29
                ],
                "name": "value",
                "start": [
                    8,
                    10
                ],
                "type": "doc.field",
                "view": "string|number",
                "visible": "public"
            }
        ],
        "name": "druid.widget.property_left_right_selector",
        "type": "type",
        "view": "druid.widget.property_left_right_selector"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            3,
                            52
                        ],
                        "start": [
                            3,
                            40
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    3,
                    52
                ],
                "start": [
                    3,
                    10
                ],
                "type": "doc.class",
                "view": "druid.widget.property_slider",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                120,
                                8
                            ],
                            "name": "self",
                            "start": [
                                120,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        },
                        {
                            "finish": [
                                120,
                                42
                            ],
                            "name": "value",
                            "start": [
                                120,
                                37
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        122,
                        3
                    ],
                    "start": [
                        120,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:_on_slider_change_by_user(value: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    120,
                    36
                ],
                "name": "_on_slider_change_by_user",
                "start": [
                    120,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        45,
                        31
                    ],
                    "start": [
                        45,
                        23
                    ],
                    "type": "getlocal",
                    "view": "fun(value: number):string"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    45,
                    20
                ],
                "name": "_text_function",
                "start": [
                    45,
                    1
                ],
                "type": "setfield",
                "view": "fun(value: number):string",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        18,
                        16
                    ],
                    "start": [
                        18,
                        15
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    18,
                    12
                ],
                "name": "_value",
                "start": [
                    18,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        74,
                        20
                    ],
                    "start": [
                        74,
                        15
                    ],
                    "type": "getlocal",
                    "view": "number"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    74,
                    12
                ],
                "name": "_value",
                "start": [
                    74,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        35
                    ],
                    "start": [
                        5,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                35
                            ],
                            "start": [
                                5,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    5,
                    35
                ],
                "name": "container",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        6,
                        30
                    ],
                    "start": [
                        6,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                30
                            ],
                            "start": [
                                6,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "druid.instance"
                        }
                    ],
                    "view": "druid.instance"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    6,
                    30
                ],
                "name": "druid",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "druid.instance",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                86,
                                8
                            ],
                            "name": "self",
                            "start": [
                                86,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        }
                    ],
                    "finish": [
                        88,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        86,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:get_value()\n  -> number"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    86,
                    20
                ],
                "name": "get_value",
                "start": [
                    86,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                14,
                                8
                            ],
                            "name": "self",
                            "start": [
                                14,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        }
                    ],
                    "finish": [
                        40,
                        3
                    ],
                    "start": [
                        14,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:init()"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    14,
                    15
                ],
                "name": "init",
                "start": [
                    14,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        21,
                        13
                    ],
                    "start": [
                        21,
                        12
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    21,
                    9
                ],
                "name": "max",
                "start": [
                    21,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        109,
                        20
                    ],
                    "start": [
                        109,
                        12
                    ],
                    "type": "binary",
                    "view": "any"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    109,
                    9
                ],
                "name": "max",
                "start": [
                    109,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        20,
                        13
                    ],
                    "start": [
                        20,
                        12
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    20,
                    9
                ],
                "name": "min",
                "start": [
                    20,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        108,
                        20
                    ],
                    "start": [
                        108,
                        12
                    ],
                    "type": "binary",
                    "view": "any"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    108,
                    9
                ],
                "name": "min",
                "start": [
                    108,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the callback function for when the slider value changes",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                59,
                                8
                            ],
                            "name": "self",
                            "start": [
                                59,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        },
                        {
                            "finish": [
                                59,
                                29
                            ],
                            "name": "callback",
                            "start": [
                                59,
                                21
                            ],
                            "type": "local",
                            "view": "fun(value: number)"
                        }
                    ],
                    "desc": "Sets the callback function for when the slider value changes",
                    "finish": [
                        61,
                        3
                    ],
                    "rawdesc": "Sets the callback function for when the slider value changes",
                    "start": [
                        59,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:on_change(callback: fun(value: number))"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    59,
                    20
                ],
                "name": "on_change",
                "rawdesc": "Sets the callback function for when the slider value changes",
                "start": [
                    59,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "fun(value:number)",
                "extends": {
                    "finish": [
                        10,
                        31
                    ],
                    "start": [
                        10,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                10,
                                31
                            ],
                            "start": [
                                10,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "event"
                        }
                    ],
                    "view": "event"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    10,
                    31
                ],
                "name": "on_change_value",
                "rawdesc": "fun(value:number)",
                "start": [
                    10,
                    10
                ],
                "type": "doc.field",
                "view": "event",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        19
                    ],
                    "start": [
                        4,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                19
                            ],
                            "start": [
                                4,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    4,
                    19
                ],
                "name": "root",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        42
                    ],
                    "start": [
                        16,
                        17
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    16,
                    14
                ],
                "name": "selected",
                "start": [
                    16,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                107,
                                8
                            ],
                            "name": "self",
                            "start": [
                                107,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        },
                        {
                            "finish": [
                                107,
                                30
                            ],
                            "name": "min",
                            "start": [
                                107,
                                27
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                107,
                                35
                            ],
                            "name": "max",
                            "start": [
                                107,
                                32
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                107,
                                41
                            ],
                            "name": "step",
                            "start": [
                                107,
                                37
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        117,
                        3
                    ],
                    "start": [
                        107,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:set_number_type(min: any, max: any, step: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    107,
                    26
                ],
                "name": "set_number_type",
                "start": [
                    107,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                44,
                                8
                            ],
                            "name": "self",
                            "start": [
                                44,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        },
                        {
                            "finish": [
                                44,
                                37
                            ],
                            "name": "callback",
                            "start": [
                                44,
                                29
                            ],
                            "type": "local",
                            "view": "fun(value: number):string"
                        }
                    ],
                    "finish": [
                        47,
                        3
                    ],
                    "start": [
                        44,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:set_text_function(callback: fun(value: number):string)"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    44,
                    28
                ],
                "name": "set_text_function",
                "start": [
                    44,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets the text property of the slider",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                52,
                                8
                            ],
                            "name": "self",
                            "start": [
                                52,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        },
                        {
                            "finish": [
                                52,
                                33
                            ],
                            "name": "text",
                            "start": [
                                52,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Sets the text property of the slider",
                    "finish": [
                        54,
                        3
                    ],
                    "rawdesc": "Sets the text property of the slider",
                    "start": [
                        52,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:set_text_property(text: string)"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    52,
                    28
                ],
                "name": "set_text_property",
                "rawdesc": "Sets the text property of the slider",
                "start": [
                    52,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                65,
                                8
                            ],
                            "name": "self",
                            "start": [
                                65,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        },
                        {
                            "finish": [
                                65,
                                26
                            ],
                            "name": "value",
                            "start": [
                                65,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                65,
                                38
                            ],
                            "name": "is_instant",
                            "start": [
                                65,
                                28
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        82,
                        3
                    ],
                    "start": [
                        65,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:set_value(value: number, is_instant: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    65,
                    20
                ],
                "name": "set_value",
                "start": [
                    65,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        9,
                        29
                    ],
                    "start": [
                        9,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                9,
                                29
                            ],
                            "start": [
                                9,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.slider"
                        }
                    ],
                    "view": "druid.slider"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    9,
                    29
                ],
                "name": "slider",
                "start": [
                    9,
                    10
                ],
                "type": "doc.field",
                "view": "druid.slider",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        22,
                        17
                    ],
                    "start": [
                        22,
                        13
                    ],
                    "type": "number",
                    "view": "number"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    22,
                    10
                ],
                "name": "step",
                "start": [
                    22,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        110,
                        17
                    ],
                    "start": [
                        110,
                        13
                    ],
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    110,
                    10
                ],
                "name": "step",
                "start": [
                    110,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        7,
                        30
                    ],
                    "start": [
                        7,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                30
                            ],
                            "start": [
                                7,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    7,
                    30
                ],
                "name": "text_name",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        8,
                        31
                    ],
                    "start": [
                        8,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                8,
                                31
                            ],
                            "start": [
                                8,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    8,
                    31
                ],
                "name": "text_value",
                "start": [
                    8,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                91,
                                8
                            ],
                            "name": "self",
                            "start": [
                                91,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_slider"
                        },
                        {
                            "finish": [
                                91,
                                29
                            ],
                            "name": "value",
                            "start": [
                                91,
                                24
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        104,
                        3
                    ],
                    "start": [
                        91,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_slider:update_value(value: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_slider.lua",
                "finish": [
                    91,
                    23
                ],
                "name": "update_value",
                "start": [
                    91,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "druid.widget.property_slider",
        "type": "type",
        "view": "druid.widget.property_slider"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            0,
                            50
                        ],
                        "start": [
                            0,
                            38
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    0,
                    50
                ],
                "start": [
                    0,
                    10
                ],
                "type": "doc.class",
                "view": "druid.widget.property_text",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        2,
                        35
                    ],
                    "start": [
                        2,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                2,
                                35
                            ],
                            "start": [
                                2,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    2,
                    35
                ],
                "name": "container",
                "start": [
                    2,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                7,
                                8
                            ],
                            "name": "self",
                            "start": [
                                7,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_text"
                        }
                    ],
                    "finish": [
                        22,
                        3
                    ],
                    "start": [
                        7,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_text:init()"
                },
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    7,
                    15
                ],
                "name": "init",
                "start": [
                    7,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        1,
                        19
                    ],
                    "start": [
                        1,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                1,
                                19
                            ],
                            "start": [
                                1,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    1,
                    19
                ],
                "name": "root",
                "start": [
                    1,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                27,
                                8
                            ],
                            "name": "self",
                            "start": [
                                27,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_text"
                        },
                        {
                            "finish": [
                                27,
                                33
                            ],
                            "name": "text",
                            "start": [
                                27,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        30,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_text"
                        }
                    ],
                    "start": [
                        27,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_text:set_text_property(text: string)\n  -> druid.widget.property_text"
                },
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    27,
                    28
                ],
                "name": "set_text_property",
                "start": [
                    27,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                35,
                                8
                            ],
                            "name": "self",
                            "start": [
                                35,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_text"
                        },
                        {
                            "finish": [
                                35,
                                30
                            ],
                            "name": "text",
                            "start": [
                                35,
                                26
                            ],
                            "type": "local",
                            "view": "string|nil"
                        }
                    ],
                    "finish": [
                        38,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_text"
                        }
                    ],
                    "start": [
                        35,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_text:set_text_value(text: string|nil)\n  -> druid.widget.property_text"
                },
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    35,
                    25
                ],
                "name": "set_text_value",
                "start": [
                    35,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        3,
                        30
                    ],
                    "start": [
                        3,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                3,
                                30
                            ],
                            "start": [
                                3,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    3,
                    30
                ],
                "name": "text_name",
                "start": [
                    3,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        31
                    ],
                    "start": [
                        4,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                31
                            ],
                            "start": [
                                4,
                                21
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_text.lua",
                "finish": [
                    4,
                    31
                ],
                "name": "text_right",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            }
        ],
        "name": "druid.widget.property_text",
        "type": "type",
        "view": "druid.widget.property_text"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            3,
                            53
                        ],
                        "start": [
                            3,
                            41
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    3,
                    53
                ],
                "start": [
                    3,
                    10
                ],
                "type": "doc.class",
                "view": "druid.widget.property_vector3",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        7,
                        29
                    ],
                    "start": [
                        7,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                29
                            ],
                            "start": [
                                7,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.button"
                        }
                    ],
                    "view": "druid.button"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    7,
                    29
                ],
                "name": "button",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "druid.button",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        35
                    ],
                    "start": [
                        5,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                35
                            ],
                            "start": [
                                5,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    5,
                    35
                ],
                "name": "container",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        8,
                        30
                    ],
                    "start": [
                        8,
                        16
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                8,
                                30
                            ],
                            "start": [
                                8,
                                16
                            ],
                            "type": "doc.type.name",
                            "view": "druid.instance"
                        }
                    ],
                    "view": "druid.instance"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    8,
                    30
                ],
                "name": "druid",
                "start": [
                    8,
                    10
                ],
                "type": "doc.field",
                "view": "druid.instance",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                11,
                                8
                            ],
                            "name": "self",
                            "start": [
                                11,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_vector3"
                        }
                    ],
                    "finish": [
                        51,
                        3
                    ],
                    "start": [
                        11,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_vector3:init()"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    11,
                    15
                ],
                "name": "init",
                "start": [
                    11,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        50,
                        32
                    ],
                    "start": [
                        50,
                        18
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    50,
                    15
                ],
                "name": "on_change",
                "start": [
                    50,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        25,
                        62
                    ],
                    "start": [
                        25,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    25,
                    18
                ],
                "name": "rich_input_x",
                "start": [
                    25,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        26,
                        62
                    ],
                    "start": [
                        26,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    26,
                    18
                ],
                "name": "rich_input_y",
                "start": [
                    26,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        27,
                        62
                    ],
                    "start": [
                        27,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    27,
                    18
                ],
                "name": "rich_input_z",
                "start": [
                    27,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        19
                    ],
                    "start": [
                        4,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                19
                            ],
                            "start": [
                                4,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    4,
                    19
                ],
                "name": "root",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        46
                    ],
                    "start": [
                        16,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    16,
                    16
                ],
                "name": "selected_x",
                "start": [
                    16,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        19,
                        46
                    ],
                    "start": [
                        19,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    19,
                    16
                ],
                "name": "selected_y",
                "start": [
                    19,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        22,
                        46
                    ],
                    "start": [
                        22,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    22,
                    16
                ],
                "name": "selected_z",
                "start": [
                    22,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                56,
                                8
                            ],
                            "name": "self",
                            "start": [
                                56,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_vector3"
                        },
                        {
                            "finish": [
                                56,
                                33
                            ],
                            "name": "text",
                            "start": [
                                56,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        59,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_vector3"
                        }
                    ],
                    "start": [
                        56,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_vector3:set_text_property(text: string)\n  -> druid.widget.property_vector3"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    56,
                    28
                ],
                "name": "set_text_property",
                "start": [
                    56,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                66,
                                8
                            ],
                            "name": "self",
                            "start": [
                                66,
                                8
                            ],
                            "type": "self",
                            "view": "druid.widget.property_vector3"
                        },
                        {
                            "finish": [
                                66,
                                22
                            ],
                            "name": "x",
                            "start": [
                                66,
                                21
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                66,
                                25
                            ],
                            "name": "y",
                            "start": [
                                66,
                                24
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "finish": [
                                66,
                                28
                            ],
                            "name": "z",
                            "start": [
                                66,
                                27
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        71,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_vector3"
                        }
                    ],
                    "start": [
                        66,
                        0
                    ],
                    "type": "function",
                    "view": "(method) druid.widget.property_vector3:set_value(x: number, y: number, z: number)\n  -> druid.widget.property_vector3"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    66,
                    20
                ],
                "name": "set_value",
                "start": [
                    66,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        6,
                        30
                    ],
                    "start": [
                        6,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                30
                            ],
                            "start": [
                                6,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    6,
                    30
                ],
                "name": "text_name",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        29,
                        30
                    ],
                    "start": [
                        29,
                        14
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_vector3.lua",
                "finish": [
                    29,
                    11
                ],
                "name": "value",
                "start": [
                    29,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            }
        ],
        "name": "druid.widget.property_vector3",
        "type": "type",
        "view": "druid.widget.property_vector3"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            10,
                            40
                        ],
                        "start": [
                            10,
                            28
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    10,
                    40
                ],
                "start": [
                    10,
                    10
                ],
                "type": "doc.class",
                "view": "widget.fps_panel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": " in seconds",
                "extends": {
                    "finish": [
                        24,
                        22
                    ],
                    "start": [
                        24,
                        21
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    24,
                    18
                ],
                "name": "collect_time",
                "rawdesc": " in seconds",
                "start": [
                    24,
                    1
                ],
                "type": "setfield",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        25,
                        30
                    ],
                    "start": [
                        25,
                        29
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    25,
                    26
                ],
                "name": "collect_time_counter",
                "start": [
                    25,
                    1
                ],
                "type": "setfield",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        73,
                        67
                    ],
                    "start": [
                        73,
                        29
                    ],
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    73,
                    26
                ],
                "name": "collect_time_counter",
                "start": [
                    73,
                    1
                ],
                "type": "setfield",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        79,
                        71
                    ],
                    "start": [
                        79,
                        30
                    ],
                    "type": "binary",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    79,
                    27
                ],
                "name": "collect_time_counter",
                "start": [
                    79,
                    2
                ],
                "type": "setfield",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " in seconds",
                "extends": {
                    "finish": [
                        23,
                        22
                    ],
                    "start": [
                        23,
                        19
                    ],
                    "type": "number",
                    "view": "number"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    23,
                    16
                ],
                "name": "delta_time",
                "rawdesc": " in seconds",
                "start": [
                    23,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " Store frame time in seconds last collect_time seconds",
                "extends": {
                    "finish": [
                        29,
                        22
                    ],
                    "start": [
                        29,
                        20
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    29,
                    17
                ],
                "name": "fps_samples",
                "rawdesc": " Store frame time in seconds last collect_time seconds",
                "start": [
                    29,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        26,
                        57
                    ],
                    "start": [
                        26,
                        22
                    ],
                    "type": "binary",
                    "view": "number"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    26,
                    19
                ],
                "name": "graph_samples",
                "start": [
                    26,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                20,
                                8
                            ],
                            "name": "self",
                            "start": [
                                20,
                                8
                            ],
                            "type": "self",
                            "view": "widget.fps_panel"
                        }
                    ],
                    "finish": [
                        55,
                        3
                    ],
                    "start": [
                        20,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.fps_panel:init()"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    20,
                    15
                ],
                "name": "init",
                "start": [
                    20,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        31,
                        66
                    ],
                    "start": [
                        31,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    31,
                    16
                ],
                "name": "mini_graph",
                "start": [
                    31,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                58,
                                8
                            ],
                            "name": "self",
                            "start": [
                                58,
                                8
                            ],
                            "type": "self",
                            "view": "widget.fps_panel"
                        }
                    ],
                    "finish": [
                        60,
                        3
                    ],
                    "start": [
                        58,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.fps_panel:on_remove()"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    58,
                    20
                ],
                "name": "on_remove",
                "start": [
                    58,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        65,
                        39
                    ],
                    "start": [
                        65,
                        23
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    65,
                    20
                ],
                "name": "previous_time",
                "start": [
                    65,
                    2
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        71,
                        34
                    ],
                    "start": [
                        71,
                        22
                    ],
                    "type": "getlocal",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    71,
                    19
                ],
                "name": "previous_time",
                "start": [
                    71,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                84,
                                8
                            ],
                            "name": "self",
                            "start": [
                                84,
                                8
                            ],
                            "type": "self",
                            "view": "widget.fps_panel"
                        }
                    ],
                    "finish": [
                        108,
                        3
                    ],
                    "start": [
                        84,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.fps_panel:push_fps_value()"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    84,
                    25
                ],
                "name": "push_fps_value",
                "start": [
                    84,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        11,
                        19
                    ],
                    "start": [
                        11,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                11,
                                19
                            ],
                            "start": [
                                11,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    11,
                    19
                ],
                "name": "root",
                "start": [
                    11,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        44,
                        48
                    ],
                    "start": [
                        44,
                        17
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    44,
                    14
                ],
                "name": "text_fps",
                "start": [
                    44,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        43,
                        56
                    ],
                    "start": [
                        43,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    43,
                    18
                ],
                "name": "text_min_fps",
                "start": [
                    43,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        48,
                        5
                    ],
                    "start": [
                        46,
                        17
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    46,
                    14
                ],
                "name": "timer_id",
                "start": [
                    46,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                63,
                                8
                            ],
                            "name": "self",
                            "start": [
                                63,
                                8
                            ],
                            "type": "self",
                            "view": "widget.fps_panel"
                        },
                        {
                            "finish": [
                                63,
                                20
                            ],
                            "name": "dt",
                            "start": [
                                63,
                                18
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        81,
                        3
                    ],
                    "start": [
                        63,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.fps_panel:update(dt: any)"
                },
                "file": "widget/insality/fps_panel/fps_panel.lua",
                "finish": [
                    63,
                    17
                ],
                "name": "update",
                "start": [
                    63,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "widget.fps_panel",
        "type": "type",
        "view": "widget.fps_panel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            2,
                            39
                        ],
                        "start": [
                            2,
                            24
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.component"
                    }
                ],
                "file": "widget/insality/image/image.lua",
                "finish": [
                    2,
                    39
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "widget.image",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                178,
                                8
                            ],
                            "name": "self",
                            "start": [
                                178,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                178,
                                44
                            ],
                            "name": "url",
                            "start": [
                                178,
                                41
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        182,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        178,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:_convert_url_to_absolute_path(url: string)\n  -> string"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    178,
                    40
                ],
                "name": "_convert_url_to_absolute_path",
                "start": [
                    178,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                76,
                                8
                            ],
                            "name": "self",
                            "start": [
                                76,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                76,
                                37
                            ],
                            "name": "texture_id",
                            "start": [
                                76,
                                27
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                76,
                                44
                            ],
                            "name": "bytes",
                            "start": [
                                76,
                                39
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        103,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        76,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:_create_texture(texture_id: string, bytes: string)\n  -> boolean"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    76,
                    26
                ],
                "name": "_create_texture",
                "start": [
                    76,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                148,
                                8
                            ],
                            "name": "self",
                            "start": [
                                148,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                148,
                                40
                            ],
                            "name": "textures_refs",
                            "start": [
                                148,
                                27
                            ],
                            "type": "local",
                            "view": "table<string, number>"
                        },
                        {
                            "finish": [
                                148,
                                52
                            ],
                            "name": "texture_id",
                            "start": [
                                148,
                                42
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        156,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        148,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:_delete_texture(textures_refs: table<string, number>, texture_id: string)\n  -> boolean"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    148,
                    26
                ],
                "name": "_delete_texture",
                "start": [
                    148,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                161,
                                8
                            ],
                            "name": "self",
                            "start": [
                                161,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                161,
                                41
                            ],
                            "name": "texture_id",
                            "start": [
                                161,
                                31
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        173,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "string"
                        }
                    ],
                    "start": [
                        161,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:_process_texture_id(texture_id: string)\n  -> string"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    161,
                    30
                ],
                "name": "_process_texture_id",
                "start": [
                    161,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                106,
                                8
                            ],
                            "name": "self",
                            "start": [
                                106,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                106,
                                38
                            ],
                            "name": "texture_id",
                            "start": [
                                106,
                                28
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        119,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        106,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:_release_texture(texture_id: any)\n  -> boolean"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    106,
                    27
                ],
                "name": "_release_texture",
                "start": [
                    106,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                123,
                                8
                            ],
                            "name": "self",
                            "start": [
                                123,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                123,
                                34
                            ],
                            "name": "texture_id",
                            "start": [
                                123,
                                24
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        142,
                        3
                    ],
                    "start": [
                        123,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:_set_texture(texture_id: string)"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    123,
                    23
                ],
                "name": "_set_texture",
                "start": [
                    123,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        6,
                        36
                    ],
                    "start": [
                        6,
                        30
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                36
                            ],
                            "start": [
                                6,
                                30
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    6,
                    36
                ],
                "name": "adjust_mode",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                17,
                                8
                            ],
                            "name": "self",
                            "start": [
                                17,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                17,
                                31
                            ],
                            "name": "node_or_node_id",
                            "start": [
                                17,
                                16
                            ],
                            "type": "local",
                            "view": "string|node"
                        }
                    ],
                    "finish": [
                        21,
                        3
                    ],
                    "start": [
                        17,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:init(node_or_node_id: string|node)"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    17,
                    15
                ],
                "name": "init",
                "start": [
                    17,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                41,
                                8
                            ],
                            "name": "self",
                            "start": [
                                41,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                41,
                                48
                            ],
                            "name": "absolute_path",
                            "start": [
                                41,
                                35
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        53,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "nil"
                        }
                    ],
                    "start": [
                        41,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:load_from_absolute_path(absolute_path: any)\n  -> nil"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    41,
                    34
                ],
                "name": "load_from_absolute_path",
                "start": [
                    41,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                29,
                                8
                            ],
                            "name": "self",
                            "start": [
                                29,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                29,
                                48
                            ],
                            "name": "resource_path",
                            "start": [
                                29,
                                35
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        38,
                        3
                    ],
                    "start": [
                        29,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:load_from_resource_path(resource_path: any)"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    29,
                    34
                ],
                "name": "load_from_resource_path",
                "start": [
                    29,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                56,
                                8
                            ],
                            "name": "self",
                            "start": [
                                56,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        },
                        {
                            "finish": [
                                56,
                                28
                            ],
                            "name": "url",
                            "start": [
                                56,
                                25
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        70,
                        3
                    ],
                    "start": [
                        56,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:load_from_url(url: any)"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    56,
                    24
                ],
                "name": "load_from_url",
                "start": [
                    56,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                24,
                                8
                            ],
                            "name": "self",
                            "start": [
                                24,
                                8
                            ],
                            "type": "self",
                            "view": "widget.image"
                        }
                    ],
                    "finish": [
                        26,
                        3
                    ],
                    "start": [
                        24,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.image:on_remove()"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    24,
                    20
                ],
                "name": "on_remove",
                "start": [
                    24,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        3,
                        19
                    ],
                    "start": [
                        3,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                3,
                                19
                            ],
                            "start": [
                                3,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    3,
                    19
                ],
                "name": "root",
                "start": [
                    3,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        30
                    ],
                    "start": [
                        4,
                        23
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                30
                            ],
                            "start": [
                                4,
                                23
                            ],
                            "type": "doc.type.name",
                            "view": "vector3"
                        }
                    ],
                    "view": "vector3"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    4,
                    30
                ],
                "name": "size",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "vector3",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        35
                    ],
                    "start": [
                        5,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                35
                            ],
                            "start": [
                                5,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "string"
                        }
                    ],
                    "view": "string"
                },
                "file": "widget/insality/image/image.lua",
                "finish": [
                    5,
                    35
                ],
                "name": "texture_id",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "string",
                "visible": "private"
            }
        ],
        "name": "widget.image",
        "type": "type",
        "view": "widget.image"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            3,
                            43
                        ],
                        "start": [
                            3,
                            31
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    3,
                    43
                ],
                "start": [
                    3,
                    10
                ],
                "type": "doc.class",
                "view": "widget.memory_panel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        10,
                        22
                    ],
                    "start": [
                        10,
                        19
                    ],
                    "type": "number",
                    "view": "number"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    10,
                    16
                ],
                "name": "delta_time",
                "start": [
                    10,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                8,
                                8
                            ],
                            "name": "self",
                            "start": [
                                8,
                                8
                            ],
                            "type": "self",
                            "view": "widget.memory_panel"
                        }
                    ],
                    "finish": [
                        46,
                        3
                    ],
                    "start": [
                        8,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.memory_panel:init()"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    8,
                    15
                ],
                "name": "init",
                "start": [
                    8,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        28,
                        55
                    ],
                    "start": [
                        28,
                        18
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    28,
                    15
                ],
                "name": "max_value",
                "start": [
                    28,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        32,
                        38
                    ],
                    "start": [
                        32,
                        15
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    32,
                    12
                ],
                "name": "memory",
                "start": [
                    32,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        62,
                        21
                    ],
                    "start": [
                        62,
                        15
                    ],
                    "type": "getlocal",
                    "view": "unknown"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    62,
                    12
                ],
                "name": "memory",
                "start": [
                    62,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        12,
                        24
                    ],
                    "start": [
                        12,
                        21
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    12,
                    18
                ],
                "name": "memory_limit",
                "start": [
                    12,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        55,
                        26
                    ],
                    "start": [
                        55,
                        21
                    ],
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    55,
                    18
                ],
                "name": "memory_limit",
                "start": [
                    55,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        33,
                        25
                    ],
                    "start": [
                        33,
                        23
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    33,
                    20
                ],
                "name": "memory_samples",
                "start": [
                    33,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        14,
                        66
                    ],
                    "start": [
                        14,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    14,
                    16
                ],
                "name": "mini_graph",
                "start": [
                    14,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                49,
                                8
                            ],
                            "name": "self",
                            "start": [
                                49,
                                8
                            ],
                            "type": "self",
                            "view": "widget.memory_panel"
                        }
                    ],
                    "finish": [
                        51,
                        3
                    ],
                    "start": [
                        49,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.memory_panel:on_remove()"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    49,
                    20
                ],
                "name": "on_remove",
                "start": [
                    49,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                59,
                                8
                            ],
                            "name": "self",
                            "start": [
                                59,
                                8
                            ],
                            "type": "self",
                            "view": "widget.memory_panel"
                        }
                    ],
                    "finish": [
                        85,
                        3
                    ],
                    "start": [
                        59,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.memory_panel:push_next_value()"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    59,
                    26
                ],
                "name": "push_next_value",
                "start": [
                    59,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        19
                    ],
                    "start": [
                        4,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                19
                            ],
                            "start": [
                                4,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    4,
                    19
                ],
                "name": "root",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        11,
                        24
                    ],
                    "start": [
                        11,
                        22
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    11,
                    19
                ],
                "name": "samples_count",
                "start": [
                    11,
                    1
                ],
                "type": "setfield",
                "view": "integer",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                54,
                                8
                            ],
                            "name": "self",
                            "start": [
                                54,
                                8
                            ],
                            "type": "self",
                            "view": "widget.memory_panel"
                        },
                        {
                            "finish": [
                                54,
                                37
                            ],
                            "name": "limit",
                            "start": [
                                54,
                                32
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        56,
                        3
                    ],
                    "start": [
                        54,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.memory_panel:set_low_memory_limit(limit: any)"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    54,
                    31
                ],
                "name": "set_low_memory_limit",
                "start": [
                    54,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        30,
                        54
                    ],
                    "start": [
                        30,
                        20
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    30,
                    17
                ],
                "name": "text_memory",
                "start": [
                    30,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        29,
                        62
                    ],
                    "start": [
                        29,
                        24
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    29,
                    21
                ],
                "name": "text_per_second",
                "start": [
                    29,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        39,
                        5
                    ],
                    "start": [
                        37,
                        17
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    37,
                    14
                ],
                "name": "timer_id",
                "start": [
                    37,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                88,
                                8
                            ],
                            "name": "self",
                            "start": [
                                88,
                                8
                            ],
                            "type": "self",
                            "view": "widget.memory_panel"
                        }
                    ],
                    "finish": [
                        96,
                        3
                    ],
                    "start": [
                        88,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.memory_panel:update_text_memory()"
                },
                "file": "widget/insality/memory_panel/memory_panel.lua",
                "finish": [
                    88,
                    29
                ],
                "name": "update_text_memory",
                "start": [
                    88,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "widget.memory_panel",
        "type": "type",
        "view": "widget.memory_panel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                "extends": [
                    {
                        "finish": [
                            8,
                            41
                        ],
                        "start": [
                            8,
                            29
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    8,
                    41
                ],
                "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                "start": [
                    8,
                    10
                ],
                "type": "doc.class",
                "view": "widget.mini_graph",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                56,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                56,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "finish": [
                        63,
                        3
                    ],
                    "start": [
                        56,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:clear()"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    56,
                    16
                ],
                "name": "clear",
                "start": [
                    56,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        33,
                        49
                    ],
                    "start": [
                        33,
                        18
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    33,
                    15
                ],
                "name": "color_one",
                "start": [
                    33,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        32,
                        48
                    ],
                    "start": [
                        32,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    32,
                    16
                ],
                "name": "color_zero",
                "start": [
                    32,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        41,
                        53
                    ],
                    "start": [
                        41,
                        18
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    41,
                    15
                ],
                "name": "container",
                "start": [
                    41,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        23,
                        40
                    ],
                    "start": [
                        23,
                        16
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    23,
                    13
                ],
                "name": "content",
                "start": [
                    23,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        47,
                        46
                    ],
                    "start": [
                        47,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    47,
                    18
                ],
                "name": "default_size",
                "start": [
                    47,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                147,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                147,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "finish": [
                        149,
                        3
                    ],
                    "start": [
                        147,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:get_highest_value()"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    147,
                    28
                ],
                "name": "get_highest_value",
                "start": [
                    147,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                108,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                108,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        },
                        {
                            "finish": [
                                108,
                                31
                            ],
                            "name": "index",
                            "start": [
                                108,
                                26
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        110,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "number"
                        }
                    ],
                    "start": [
                        108,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:get_line_value(index: any)\n  -> number"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    108,
                    25
                ],
                "name": "get_line_value",
                "start": [
                    108,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                142,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                142,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "finish": [
                        144,
                        3
                    ],
                    "start": [
                        142,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:get_lowest_value()"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    142,
                    27
                ],
                "name": "get_lowest_value",
                "start": [
                    142,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                81,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                81,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "finish": [
                        83,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": [
                        81,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:get_samples()\n  -> unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    81,
                    22
                ],
                "name": "get_samples",
                "start": [
                    81,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        18,
                        44
                    ],
                    "start": [
                        18,
                        18
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    18,
                    15
                ],
                "name": "icon_drag",
                "start": [
                    18,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                14,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                14,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "finish": [
                        48,
                        3
                    ],
                    "start": [
                        14,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:init()"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    14,
                    15
                ],
                "name": "init",
                "start": [
                    14,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        36,
                        23
                    ],
                    "start": [
                        36,
                        18
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    36,
                    15
                ],
                "name": "is_hidden",
                "start": [
                    36,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        163,
                        36
                    ],
                    "start": [
                        163,
                        18
                    ],
                    "type": "unary",
                    "view": "boolean"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    163,
                    15
                ],
                "name": "is_hidden",
                "start": [
                    163,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        26,
                        26
                    ],
                    "start": [
                        24,
                        15
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    24,
                    12
                ],
                "name": "layout",
                "start": [
                    24,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        38,
                        16
                    ],
                    "start": [
                        38,
                        14
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    38,
                    11
                ],
                "name": "lines",
                "start": [
                    38,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        62,
                        16
                    ],
                    "start": [
                        62,
                        14
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    62,
                    11
                ],
                "name": "lines",
                "start": [
                    62,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " in this value line will be at max height",
                "extends": {
                    "finish": [
                        37,
                        19
                    ],
                    "start": [
                        37,
                        18
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    37,
                    15
                ],
                "name": "max_value",
                "rawdesc": " in this value line will be at max height",
                "start": [
                    37,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        127,
                        27
                    ],
                    "start": [
                        127,
                        18
                    ],
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    127,
                    15
                ],
                "name": "max_value",
                "start": [
                    127,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                152,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                152,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        },
                        {
                            "finish": [
                                152,
                                28
                            ],
                            "name": "dx",
                            "start": [
                                152,
                                26
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                152,
                                32
                            ],
                            "name": "dy",
                            "start": [
                                152,
                                30
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        159,
                        3
                    ],
                    "start": [
                        152,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:on_drag_widget(dx: any, dy: any)"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    152,
                    25
                ],
                "name": "on_drag_widget",
                "start": [
                    152,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                51,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                51,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "finish": [
                        53,
                        3
                    ],
                    "start": [
                        51,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:on_remove()"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    51,
                    20
                ],
                "name": "on_remove",
                "start": [
                    51,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        28,
                        48
                    ],
                    "start": [
                        28,
                        20
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    28,
                    17
                ],
                "name": "prefab_line",
                "start": [
                    28,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                113,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                113,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        },
                        {
                            "finish": [
                                113,
                                32
                            ],
                            "name": "value",
                            "start": [
                                113,
                                27
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        119,
                        3
                    ],
                    "start": [
                        113,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:push_line_value(value: any)"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    113,
                    26
                ],
                "name": "push_line_value",
                "start": [
                    113,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        15,
                        34
                    ],
                    "start": [
                        15,
                        13
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    15,
                    10
                ],
                "name": "root",
                "start": [
                    15,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        67,
                        23
                    ],
                    "start": [
                        67,
                        16
                    ],
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    67,
                    13
                ],
                "name": "samples",
                "start": [
                    67,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                134,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                134,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        },
                        {
                            "finish": [
                                134,
                                32
                            ],
                            "name": "index",
                            "start": [
                                134,
                                27
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        139,
                        3
                    ],
                    "start": [
                        134,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:set_line_height(index: any)"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    134,
                    26
                ],
                "name": "set_line_height",
                "start": [
                    134,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set normalized to control the color of the line\n\t\tfor index = 1, mini_graph:get_samples() do\n\t\t\tmini_graph:set_line_value(index, math.random())\n\t\tend\n\n@*param* `value` — The normalized value from 0 to 1",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                92,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                92,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        },
                        {
                            "finish": [
                                92,
                                31
                            ],
                            "name": "index",
                            "start": [
                                92,
                                26
                            ],
                            "type": "local",
                            "view": "number"
                        },
                        {
                            "desc": "The normalized value from 0 to 1",
                            "finish": [
                                92,
                                38
                            ],
                            "name": "value",
                            "rawdesc": "The normalized value from 0 to 1",
                            "start": [
                                92,
                                33
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Set normalized to control the color of the line\n\t\tfor index = 1, mini_graph:get_samples() do\n\t\t\tmini_graph:set_line_value(index, math.random())\n\t\tend\n\n@*param* `value` — The normalized value from 0 to 1",
                    "finish": [
                        104,
                        3
                    ],
                    "rawdesc": "Set normalized to control the color of the line\n\t\tfor index = 1, mini_graph:get_samples() do\n\t\t\tmini_graph:set_line_value(index, math.random())\n\t\tend",
                    "start": [
                        92,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:set_line_value(index: number, value: number)"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    92,
                    25
                ],
                "name": "set_line_value",
                "rawdesc": "Set normalized to control the color of the line\n\t\tfor index = 1, mini_graph:get_samples() do\n\t\t\tmini_graph:set_line_value(index, math.random())\n\t\tend",
                "start": [
                    92,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                122,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                122,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        },
                        {
                            "finish": [
                                122,
                                34
                            ],
                            "name": "max_value",
                            "start": [
                                122,
                                25
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        131,
                        3
                    ],
                    "start": [
                        122,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:set_max_value(max_value: any)"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    122,
                    24
                ],
                "name": "set_max_value",
                "start": [
                    122,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                66,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                66,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        },
                        {
                            "finish": [
                                66,
                                30
                            ],
                            "name": "samples",
                            "start": [
                                66,
                                23
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        78,
                        3
                    ],
                    "start": [
                        66,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:set_samples(samples: any)"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    66,
                    22
                ],
                "name": "set_samples",
                "start": [
                    66,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        54
                    ],
                    "start": [
                        16,
                        20
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    16,
                    17
                ],
                "name": "text_header",
                "start": [
                    16,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "desc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "finish": [
                                162,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget to display a several lines with different height in a row\nInit, set amount of samples and max value of value means that the line will be at max height\nUse `push_line_value` to add a new value to the line\nOr `set_line_value` to set a value to the line by index\nSetup colors inside template file (at minimum and maximum)",
                            "start": [
                                162,
                                8
                            ],
                            "type": "self",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "finish": [
                        172,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.mini_graph"
                        }
                    ],
                    "start": [
                        162,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.mini_graph:toggle_hide()\n  -> widget.mini_graph"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    162,
                    22
                ],
                "name": "toggle_hide",
                "start": [
                    162,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        39,
                        17
                    ],
                    "start": [
                        39,
                        15
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/mini_graph/mini_graph.lua",
                "finish": [
                    39,
                    12
                ],
                "name": "values",
                "start": [
                    39,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            }
        ],
        "name": "widget.mini_graph",
        "type": "type",
        "view": "widget.mini_graph"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                "extends": [
                    {
                        "finish": [
                            42,
                            49
                        ],
                        "start": [
                            42,
                            37
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    42,
                    49
                ],
                "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                "start": [
                    42,
                    10
                ],
                "type": "doc.class",
                "view": "widget.navigation_handler",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "desc": "Check if the supplied action_id can trigger the selected component.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                367,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                367,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "finish": [
                                367,
                                42
                            ],
                            "name": "action_id",
                            "start": [
                                367,
                                33
                            ],
                            "type": "local",
                            "view": "hash"
                        }
                    ],
                    "desc": "Check if the supplied action_id can trigger the selected component.",
                    "finish": [
                        375,
                        3
                    ],
                    "rawdesc": "Check if the supplied action_id can trigger the selected component.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        367,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:_action_id_is_trigger(action_id: hash)\n  -> boolean"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    367,
                    32
                ],
                "name": "_action_id_is_trigger",
                "rawdesc": "Check if the supplied action_id can trigger the selected component.",
                "start": [
                    367,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "De-select the current selected component.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                349,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                349,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "desc": "De-select the current selected component.",
                    "finish": [
                        360,
                        3
                    ],
                    "rawdesc": "De-select the current selected component.",
                    "start": [
                        349,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:_deselect_current()"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    349,
                    28
                ],
                "name": "_deselect_current",
                "rawdesc": "De-select the current selected component.",
                "start": [
                    349,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The valid \"escape\" direction of the current selection.",
                "extends": {
                    "finish": [
                        49,
                        52
                    ],
                    "start": [
                        49,
                        39
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                49,
                                52
                            ],
                            "start": [
                                49,
                                39
                            ],
                            "type": "doc.type.sign",
                            "view": "table<string>"
                        }
                    ],
                    "view": "table<string>"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    49,
                    52
                ],
                "name": "_deselect_directions",
                "rawdesc": "The valid \"escape\" direction of the current selection.",
                "start": [
                    49,
                    10
                ],
                "type": "doc.field",
                "view": "table<string>",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Find the best next button based on the direction from the currently selected button.\n\n@*param* `dir` — Valid directions: \"top\", \"bottom\", \"left\", \"right\".",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                289,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                289,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "Valid directions: \"top\", \"bottom\", \"left\", \"right\".",
                            "finish": [
                                289,
                                32
                            ],
                            "name": "dir",
                            "rawdesc": "Valid directions: \"top\", \"bottom\", \"left\", \"right\".",
                            "start": [
                                289,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Find the best next button based on the direction from the currently selected button.\n\n@*param* `dir` — Valid directions: \"top\", \"bottom\", \"left\", \"right\".",
                    "finish": [
                        344,
                        3
                    ],
                    "rawdesc": "Find the best next button based on the direction from the currently selected button.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.component|nil"
                        }
                    ],
                    "start": [
                        289,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:_find_next_button(dir: string)\n  -> druid.component|nil"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    289,
                    28
                ],
                "name": "_find_next_button",
                "rawdesc": "Find the best next button based on the direction from the currently selected button.",
                "start": [
                    289,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Handle new selection.\n\n@*param* `new` — Instance of the selected component.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                382,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                382,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "Instance of the selected component.",
                            "finish": [
                                382,
                                29
                            ],
                            "name": "new",
                            "rawdesc": "Instance of the selected component.",
                            "start": [
                                382,
                                26
                            ],
                            "type": "local",
                            "view": "druid.component"
                        }
                    ],
                    "desc": "Handle new selection.\n\n@*param* `new` — Instance of the selected component.",
                    "finish": [
                        415,
                        3
                    ],
                    "rawdesc": "Handle new selection.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        382,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:_on_new_select(new: druid.component)\n  -> boolean"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    382,
                    25
                ],
                "name": "_on_new_select",
                "rawdesc": "Handle new selection.",
                "start": [
                    382,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Select trigger for the current component. Defaults to `druid.const.ACTION_SPACE`.",
                "extends": {
                    "finish": [
                        46,
                        38
                    ],
                    "start": [
                        46,
                        34
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                46,
                                38
                            ],
                            "start": [
                                46,
                                34
                            ],
                            "type": "doc.type.name",
                            "view": "hash"
                        }
                    ],
                    "view": "hash"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    46,
                    38
                ],
                "name": "_select_trigger",
                "rawdesc": "Select trigger for the current component. Defaults to `druid.const.ACTION_SPACE`.",
                "start": [
                    46,
                    10
                ],
                "type": "doc.field",
                "view": "hash",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Currently selected button instance.",
                "extends": {
                    "finish": [
                        48,
                        79
                    ],
                    "start": [
                        48,
                        38
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                48,
                                53
                            ],
                            "start": [
                                48,
                                38
                            ],
                            "type": "doc.type.name",
                            "view": "druid.component"
                        },
                        {
                            "finish": [
                                48,
                                66
                            ],
                            "start": [
                                48,
                                54
                            ],
                            "type": "doc.type.name",
                            "view": "druid.button"
                        },
                        {
                            "finish": [
                                48,
                                79
                            ],
                            "start": [
                                48,
                                67
                            ],
                            "type": "doc.type.name",
                            "view": "druid.slider"
                        }
                    ],
                    "view": "druid.button|druid.component|druid.slider"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    48,
                    79
                ],
                "name": "_selected_component",
                "rawdesc": "Currently selected button instance.",
                "start": [
                    48,
                    10
                ],
                "type": "doc.field",
                "view": "druid.button|druid.component|druid.slider",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns true if the currently selected `druid.component` is a `druid.button`.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                272,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                272,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "desc": "Returns true if the currently selected `druid.component` is a `druid.button`.",
                    "finish": [
                        274,
                        3
                    ],
                    "rawdesc": "Returns true if the currently selected `druid.component` is a `druid.button`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        272,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:_selected_is_button()\n  -> boolean"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    272,
                    30
                ],
                "name": "_selected_is_button",
                "rawdesc": "Returns true if the currently selected `druid.component` is a `druid.button`.",
                "start": [
                    272,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Returns true if the currently selected `druid.component` is a `druid.slider`.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                280,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                280,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "desc": "Returns true if the currently selected `druid.component` is a `druid.slider`.",
                    "finish": [
                        282,
                        3
                    ],
                    "rawdesc": "Returns true if the currently selected `druid.component` is a `druid.slider`.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        280,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:_selected_is_slider()\n  -> boolean"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    280,
                    30
                ],
                "name": "_selected_is_slider",
                "rawdesc": "Returns true if the currently selected `druid.component` is a `druid.slider`.",
                "start": [
                    280,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Table of action_ids that can trigger the selected component. Valid only for the current button when set.",
                "extends": {
                    "finish": [
                        47,
                        42
                    ],
                    "start": [
                        47,
                        37
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                47,
                                42
                            ],
                            "start": [
                                47,
                                37
                            ],
                            "type": "doc.type.name",
                            "view": "table"
                        }
                    ],
                    "view": "table"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    47,
                    42
                ],
                "name": "_selected_triggers",
                "rawdesc": "Table of action_ids that can trigger the selected component. Valid only for the current button when set.",
                "start": [
                    47,
                    10
                ],
                "type": "doc.field",
                "view": "table",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Determines how lenient the next button finding logic is. Set larger value for further diagonal navigation.",
                "extends": {
                    "finish": [
                        45,
                        35
                    ],
                    "start": [
                        45,
                        29
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                45,
                                35
                            ],
                            "start": [
                                45,
                                29
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    45,
                    35
                ],
                "name": "_tolerance",
                "rawdesc": "Determines how lenient the next button finding logic is. Set larger value for further diagonal navigation.",
                "start": [
                    45,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Helper method for checking iterating through components.\nReturns true if the given component is in the table of valid components.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                438,
                                43
                            ],
                            "name": "input_component",
                            "start": [
                                438,
                                28
                            ],
                            "type": "local",
                            "view": "druid.component"
                        }
                    ],
                    "desc": "Helper method for checking iterating through components.\nReturns true if the given component is in the table of valid components.",
                    "finish": [
                        446,
                        3
                    ],
                    "rawdesc": "Helper method for checking iterating through components.\nReturns true if the given component is in the table of valid components.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        438,
                        0
                    ],
                    "type": "function",
                    "view": "function widget.navigation_handler._valid_component(input_component: druid.component)\n  -> boolean"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    438,
                    27
                ],
                "name": "_valid_component",
                "rawdesc": "Helper method for checking iterating through components.\nReturns true if the given component is in the table of valid components.",
                "start": [
                    438,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Helper method for checking if the given direction is valid.",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                423,
                                32
                            ],
                            "name": "dirs",
                            "start": [
                                423,
                                28
                            ],
                            "type": "local",
                            "view": "table<string>"
                        },
                        {
                            "finish": [
                                423,
                                37
                            ],
                            "name": "dir",
                            "start": [
                                423,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Helper method for checking if the given direction is valid.",
                    "finish": [
                        430,
                        3
                    ],
                    "rawdesc": "Helper method for checking if the given direction is valid.",
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        423,
                        0
                    ],
                    "type": "function",
                    "view": "function widget.navigation_handler._valid_direction(dirs: table<string>, dir: string)\n  -> boolean"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    423,
                    27
                ],
                "name": "_valid_direction",
                "rawdesc": "Helper method for checking if the given direction is valid.",
                "start": [
                    423,
                    9
                ],
                "type": "setfield",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The value used to control of the next button diagonal finding logic strictness.",
                "extends": {
                    "finish": [
                        44,
                        32
                    ],
                    "start": [
                        44,
                        26
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                44,
                                32
                            ],
                            "start": [
                                44,
                                26
                            ],
                            "type": "doc.type.name",
                            "view": "number"
                        }
                    ],
                    "view": "number"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    44,
                    32
                ],
                "name": "_weight",
                "rawdesc": "The value used to control of the next button diagonal finding logic strictness.",
                "start": [
                    44,
                    10
                ],
                "type": "doc.field",
                "view": "number",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Get current the trigger key for currently selected component.\n\n@*return* `_select_trigger` — The action_id of the input key.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                221,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                221,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "desc": "Get current the trigger key for currently selected component.\n\n@*return* `_select_trigger` — The action_id of the input key.",
                    "finish": [
                        223,
                        3
                    ],
                    "rawdesc": "Get current the trigger key for currently selected component.",
                    "returns": [
                        {
                            "desc": "The action_id of the input key.",
                            "name": "_select_trigger",
                            "rawdesc": "The action_id of the input key.",
                            "type": "function.return",
                            "view": "hash"
                        }
                    ],
                    "start": [
                        221,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:get_select_trigger()\n  -> _select_trigger: hash"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    221,
                    29
                ],
                "name": "get_select_trigger",
                "rawdesc": "Get current the trigger key for currently selected component.",
                "start": [
                    221,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Get the currently selected component.\n\n@*return* `_selected_component` — Selected component, which often is a `druid.button`.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                249,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                249,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "desc": "Get the currently selected component.\n\n@*return* `_selected_component` — Selected component, which often is a `druid.button`.",
                    "finish": [
                        251,
                        3
                    ],
                    "rawdesc": "Get the currently selected component.",
                    "returns": [
                        {
                            "desc": "Selected component, which often is a `druid.button`.",
                            "name": "_selected_component",
                            "rawdesc": "Selected component, which often is a `druid.button`.",
                            "type": "function.return",
                            "view": "druid.component|nil"
                        }
                    ],
                    "start": [
                        249,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:get_selected_component()\n  -> _selected_component: druid.component|nil"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    249,
                    33
                ],
                "name": "get_selected_component",
                "rawdesc": "Get the currently selected component.",
                "start": [
                    249,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "The constructor for the navigation_handler widget.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                57,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                57,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "desc": "The constructor for the navigation_handler widget.",
                    "finish": [
                        67,
                        3
                    ],
                    "rawdesc": "The constructor for the navigation_handler widget.",
                    "start": [
                        57,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:init()"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    57,
                    15
                ],
                "name": "init",
                "rawdesc": "The constructor for the navigation_handler widget.",
                "start": [
                    57,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "@*param* `action_id` — Action id from on_input.\n\n@*param* `action` — Action from on_input.\n\n@*return* `is_consumed` — True if the input was consumed.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                74,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                74,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "Action id from on_input.",
                            "finish": [
                                74,
                                29
                            ],
                            "name": "action_id",
                            "rawdesc": "Action id from on_input.",
                            "start": [
                                74,
                                20
                            ],
                            "type": "local",
                            "view": "hash"
                        },
                        {
                            "desc": "Action from on_input.",
                            "finish": [
                                74,
                                37
                            ],
                            "name": "action",
                            "rawdesc": "Action from on_input.",
                            "start": [
                                74,
                                31
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "desc": "@*param* `action_id` — Action id from on_input.\n\n@*param* `action` — Action from on_input.\n\n@*return* `is_consumed` — True if the input was consumed.",
                    "finish": [
                        174,
                        3
                    ],
                    "returns": [
                        {
                            "desc": "True if the input was consumed.",
                            "name": "is_consumed",
                            "rawdesc": "True if the input was consumed.",
                            "type": "function.return",
                            "view": "boolean"
                        }
                    ],
                    "start": [
                        74,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:on_input(action_id: hash, action: table)\n  -> is_consumed: boolean"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    74,
                    19
                ],
                "name": "on_input",
                "start": [
                    74,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "fun(self, component_instance, component_instance) Triggers when a new component is selected. The first component is for the newly selected and the second is for the previous component.",
                "extends": {
                    "finish": [
                        43,
                        25
                    ],
                    "start": [
                        43,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                43,
                                25
                            ],
                            "start": [
                                43,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "event"
                        }
                    ],
                    "view": "event"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    43,
                    25
                ],
                "name": "on_select",
                "rawdesc": "fun(self, component_instance, component_instance) Triggers when a new component is selected. The first component is for the newly selected and the second is for the previous component.",
                "start": [
                    43,
                    10
                ],
                "type": "doc.field",
                "view": "event",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set the given `druid.component` as selected component.\n\n@*param* `component` — Current druid component that starts as selected.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                180,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                180,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "Current druid component that starts as selected.",
                            "finish": [
                                180,
                                37
                            ],
                            "name": "component",
                            "rawdesc": "Current druid component that starts as selected.",
                            "start": [
                                180,
                                28
                            ],
                            "type": "local",
                            "view": "druid.component"
                        }
                    ],
                    "desc": "Set the given `druid.component` as selected component.\n\n@*param* `component` — Current druid component that starts as selected.",
                    "finish": [
                        189,
                        3
                    ],
                    "rawdesc": "Set the given `druid.component` as selected component.",
                    "returns": [
                        {
                            "name": "self",
                            "type": "function.return",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "start": [
                        180,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:select_component(component: druid.component)\n  -> self: widget.navigation_handler"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    180,
                    27
                ],
                "name": "select_component",
                "rawdesc": "Set the given `druid.component` as selected component.",
                "start": [
                    180,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set the de-select direction for the selected button. If this is set\nthen the next button can only be in that direction.\n\n@*param* `dir` — Valid directions: \"up\", \"down\", \"left\", \"right\". Can take multiple values as a table of strings.\n\n@*return* `self` — The current navigation handler instance.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                258,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                258,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "Valid directions: \"up\", \"down\", \"left\", \"right\". Can take multiple values as a table of strings.",
                            "finish": [
                                258,
                                38
                            ],
                            "name": "dir",
                            "rawdesc": "Valid directions: \"up\", \"down\", \"left\", \"right\". Can take multiple values as a table of strings.",
                            "start": [
                                258,
                                35
                            ],
                            "type": "local",
                            "view": "string|table"
                        }
                    ],
                    "desc": "Set the de-select direction for the selected button. If this is set\nthen the next button can only be in that direction.\n\n@*param* `dir` — Valid directions: \"up\", \"down\", \"left\", \"right\". Can take multiple values as a table of strings.\n\n@*return* `self` — The current navigation handler instance.",
                    "finish": [
                        266,
                        3
                    ],
                    "rawdesc": "Set the de-select direction for the selected button. If this is set\nthen the next button can only be in that direction.",
                    "returns": [
                        {
                            "desc": "The current navigation handler instance.",
                            "name": "self",
                            "rawdesc": "The current navigation handler instance.",
                            "type": "function.return",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "start": [
                        258,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:set_deselect_directions(dir: string|table)\n  -> self: widget.navigation_handler"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    258,
                    34
                ],
                "name": "set_deselect_directions",
                "rawdesc": "Set the de-select direction for the selected button. If this is set\nthen the next button can only be in that direction.",
                "start": [
                    258,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set input action_id name to trigger selected component by keyboard/gamepad.\n\n@*param* `key` — The action_id of the input key. Example: \"key_space\".\n\n@*return* `self` — The current navigation handler instance.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                213,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                213,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "The action_id of the input key. Example: \"key_space\".",
                            "finish": [
                                213,
                                33
                            ],
                            "name": "key",
                            "rawdesc": "The action_id of the input key. Example: \"key_space\".",
                            "start": [
                                213,
                                30
                            ],
                            "type": "local",
                            "view": "hash"
                        }
                    ],
                    "desc": "Set input action_id name to trigger selected component by keyboard/gamepad.\n\n@*param* `key` — The action_id of the input key. Example: \"key_space\".\n\n@*return* `self` — The current navigation handler instance.",
                    "finish": [
                        216,
                        3
                    ],
                    "rawdesc": "Set input action_id name to trigger selected component by keyboard/gamepad.",
                    "returns": [
                        {
                            "desc": "The current navigation handler instance.",
                            "name": "self",
                            "rawdesc": "The current navigation handler instance.",
                            "type": "function.return",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "start": [
                        213,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:set_select_trigger(key: hash)\n  -> self: widget.navigation_handler"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    213,
                    29
                ],
                "name": "set_select_trigger",
                "rawdesc": "Set input action_id name to trigger selected component by keyboard/gamepad.",
                "start": [
                    213,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set the trigger keys for the selected component. Stays valid until the selected component changes.\n\n@*param* `keys` — Supports multiple action_ids if the given value is a table with the action_id hashes or strings.\n\n@*return* `self` — The current navigation handler instance.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                229,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                229,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "Supports multiple action_ids if the given value is a table with the action_id hashes or strings.",
                            "finish": [
                                229,
                                45
                            ],
                            "name": "keys",
                            "rawdesc": "Supports multiple action_ids if the given value is a table with the action_id hashes or strings.",
                            "start": [
                                229,
                                41
                            ],
                            "type": "local",
                            "view": "string|table|hash"
                        }
                    ],
                    "desc": "Set the trigger keys for the selected component. Stays valid until the selected component changes.\n\n@*param* `keys` — Supports multiple action_ids if the given value is a table with the action_id hashes or strings.\n\n@*return* `self` — The current navigation handler instance.",
                    "finish": [
                        244,
                        3
                    ],
                    "rawdesc": "Set the trigger keys for the selected component. Stays valid until the selected component changes.",
                    "returns": [
                        {
                            "desc": "The current navigation handler instance.",
                            "name": "self",
                            "rawdesc": "The current navigation handler instance.",
                            "type": "function.return",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "start": [
                        229,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:set_temporary_select_triggers(keys: string|table|hash)\n  -> self: widget.navigation_handler"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    229,
                    40
                ],
                "name": "set_temporary_select_triggers",
                "rawdesc": "Set the trigger keys for the selected component. Stays valid until the selected component changes.",
                "start": [
                    229,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets a new tolerance value. Can be useful when scale or window size changes.\n\n@*param* `new_value` — How far to allow misalignment on the perpendicular axis when finding the next button.\n\n@*return* `self` — The current navigation handler instance.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                204,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                204,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "desc": "How far to allow misalignment on the perpendicular axis when finding the next button.",
                            "finish": [
                                204,
                                34
                            ],
                            "name": "new_value",
                            "rawdesc": "How far to allow misalignment on the perpendicular axis when finding the next button.",
                            "start": [
                                204,
                                25
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sets a new tolerance value. Can be useful when scale or window size changes.\n\n@*param* `new_value` — How far to allow misalignment on the perpendicular axis when finding the next button.\n\n@*return* `self` — The current navigation handler instance.",
                    "finish": [
                        207,
                        3
                    ],
                    "rawdesc": "Sets a new tolerance value. Can be useful when scale or window size changes.",
                    "returns": [
                        {
                            "desc": "The current navigation handler instance.",
                            "name": "self",
                            "rawdesc": "The current navigation handler instance.",
                            "type": "function.return",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "start": [
                        204,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:set_tolerance(new_value: number)\n  -> self: widget.navigation_handler"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    204,
                    24
                ],
                "name": "set_tolerance",
                "rawdesc": "Sets a new tolerance value. Can be useful when scale or window size changes.",
                "start": [
                    204,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Sets a new weight value which affects the next button diagonal finding logic.",
                "extends": {
                    "args": [
                        {
                            "desc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "finish": [
                                195,
                                8
                            ],
                            "name": "self",
                            "rawdesc": "Widget force handling GUI navigation via keyboard/gamepad.\n\n### Setup\nLoads the widget module:\n`local navigation_handler = require(\"druid.widgets.navigation_handler.navigation_handler\")`\n\nCreate the new widget instance:\n`self.nav = self.druid:new_widget(navigation_handler)`\n\nSet the first component instance (likely a button) to be selected. This is **required**.\n`self.nav:select_component(self.my_button)`\n\n\n### Example using the `on_select` event\n```\nlocal function on_select_btn(self, new, current)\n    gui.play_flipbook(new.node, \"button_selected\")\n    gui.play_flipbook(current.node, \"button\")\nend\n```\nWith `self.nav.on_select:subscribe(on_select_btn)`\n\n\n### Notes\n- `on_select` event callback params: (self, component_instance, component_instance).\n-   - **self** - Druid self context.\n-   - **new** - The component that will be selected next.\n-   - **current** - The component that is about to be de-selected.\n- Key triggers in `input.binding` should match your setup.\n- Used `action_id`'s are:' `key_up`, `key_down`, `key_left` and `key_right`.",
                            "start": [
                                195,
                                8
                            ],
                            "type": "self",
                            "view": "widget.navigation_handler"
                        },
                        {
                            "finish": [
                                195,
                                31
                            ],
                            "name": "new_value",
                            "start": [
                                195,
                                22
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Sets a new weight value which affects the next button diagonal finding logic.",
                    "finish": [
                        198,
                        3
                    ],
                    "rawdesc": "Sets a new weight value which affects the next button diagonal finding logic.",
                    "returns": [
                        {
                            "name": "self",
                            "type": "function.return",
                            "view": "widget.navigation_handler"
                        }
                    ],
                    "start": [
                        195,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.navigation_handler:set_weight(new_value: number)\n  -> self: widget.navigation_handler"
                },
                "file": "widget/insality/navigation_handler/navigation_handler.lua",
                "finish": [
                    195,
                    21
                ],
                "name": "set_weight",
                "rawdesc": "Sets a new weight value which affects the next button diagonal finding logic.",
                "start": [
                    195,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "widget.navigation_handler",
        "type": "type",
        "view": "widget.navigation_handler"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            12,
                            47
                        ],
                        "start": [
                            12,
                            35
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    12,
                    47
                ],
                "start": [
                    12,
                    10
                ],
                "type": "doc.class",
                "view": "widget.properties_panel",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        103,
                        50
                    ],
                    "start": [
                        103,
                        25
                    ],
                    "type": "unary",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    103,
                    22
                ],
                "name": "_is_auto_refresh",
                "start": [
                    103,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        365,
                        28
                    ],
                    "start": [
                        365,
                        19
                    ],
                    "type": "getlocal",
                    "view": "any"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    365,
                    16
                ],
                "name": "_is_hidden",
                "start": [
                    365,
                    1
                ],
                "type": "setfield",
                "view": "any",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        110,
                        6
                    ],
                    "start": [
                        108,
                        24
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    108,
                    21
                ],
                "name": "_timer_refresh",
                "start": [
                    108,
                    2
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        114,
                        27
                    ],
                    "start": [
                        114,
                        24
                    ],
                    "type": "nil",
                    "view": "nil"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    114,
                    21
                ],
                "name": "_timer_refresh",
                "start": [
                    114,
                    2
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                252,
                                8
                            ],
                            "name": "self",
                            "start": [
                                252,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                252,
                                31
                            ],
                            "name": "on_create",
                            "start": [
                                252,
                                22
                            ],
                            "type": "local",
                            "view": "fun(button: widget.property_button)|nil"
                        }
                    ],
                    "finish": [
                        254,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        252,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_button(on_create: fun(button: widget.property_button)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    252,
                    21
                ],
                "name": "add_button",
                "start": [
                    252,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                238,
                                8
                            ],
                            "name": "self",
                            "start": [
                                238,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                238,
                                33
                            ],
                            "name": "on_create",
                            "start": [
                                238,
                                24
                            ],
                            "type": "local",
                            "view": "fun(checkbox: widget.property_checkbox)|nil"
                        }
                    ],
                    "finish": [
                        240,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        238,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_checkbox(on_create: fun(checkbox: widget.property_checkbox)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    238,
                    23
                ],
                "name": "add_checkbox",
                "start": [
                    238,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                288,
                                8
                            ],
                            "name": "self",
                            "start": [
                                288,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                288,
                                40
                            ],
                            "name": "widget_class",
                            "start": [
                                288,
                                28
                            ],
                            "type": "local",
                            "view": "<T:druid.widget>"
                        },
                        {
                            "finish": [
                                288,
                                50
                            ],
                            "name": "template",
                            "start": [
                                288,
                                42
                            ],
                            "type": "local",
                            "view": "string|nil"
                        },
                        {
                            "finish": [
                                288,
                                57
                            ],
                            "name": "nodes",
                            "start": [
                                288,
                                52
                            ],
                            "type": "local",
                            "view": "string|node|table<hash, node>|nil"
                        },
                        {
                            "finish": [
                                288,
                                68
                            ],
                            "name": "on_create",
                            "start": [
                                288,
                                59
                            ],
                            "type": "local",
                            "view": "fun(widget: <T:druid.widget>)|nil"
                        }
                    ],
                    "finish": [
                        301,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        288,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_inner_widget(widget_class: <T:druid.widget>, template: string|nil, nodes: string|node|table<hash, node>|nil, on_create: fun(widget: <T:druid.widget>)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    288,
                    27
                ],
                "name": "add_inner_widget",
                "start": [
                    288,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                259,
                                8
                            ],
                            "name": "self",
                            "start": [
                                259,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                259,
                                30
                            ],
                            "name": "on_create",
                            "start": [
                                259,
                                21
                            ],
                            "type": "local",
                            "view": "fun(input: widget.property_input)|nil"
                        }
                    ],
                    "finish": [
                        261,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        259,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_input(on_create: fun(input: widget.property_input)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    259,
                    20
                ],
                "name": "add_input",
                "start": [
                    259,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                271,
                                8
                            ],
                            "name": "self",
                            "start": [
                                271,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                271,
                                44
                            ],
                            "name": "on_create",
                            "start": [
                                271,
                                35
                            ],
                            "type": "local",
                            "view": "fun(selector: widget.property_left_right_selector)|nil"
                        }
                    ],
                    "finish": [
                        273,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        271,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_left_right_selector(on_create: fun(selector: widget.property_left_right_selector)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    271,
                    34
                ],
                "name": "add_left_right_selector",
                "start": [
                    271,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                325,
                                8
                            ],
                            "name": "self",
                            "start": [
                                325,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                325,
                                30
                            ],
                            "name": "widget",
                            "start": [
                                325,
                                24
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        334,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": [
                        325,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_property(widget: any)\n  -> unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    325,
                    23
                ],
                "name": "add_property",
                "start": [
                    325,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                462,
                                8
                            ],
                            "name": "self",
                            "start": [
                                462,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                462,
                                46
                            ],
                            "name": "component_id",
                            "start": [
                                462,
                                34
                            ],
                            "type": "local",
                            "view": "string"
                        },
                        {
                            "finish": [
                                462,
                                52
                            ],
                            "name": "data",
                            "start": [
                                462,
                                48
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "finish": [
                        567,
                        3
                    ],
                    "start": [
                        462,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_property_component(component_id: string, data: table)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    462,
                    33
                ],
                "name": "add_property_component",
                "start": [
                    462,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                245,
                                8
                            ],
                            "name": "self",
                            "start": [
                                245,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                245,
                                31
                            ],
                            "name": "on_create",
                            "start": [
                                245,
                                22
                            ],
                            "type": "local",
                            "view": "fun(slider: widget.property_slider)|nil"
                        }
                    ],
                    "finish": [
                        247,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        245,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_slider(on_create: fun(slider: widget.property_slider)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    245,
                    21
                ],
                "name": "add_slider",
                "start": [
                    245,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                265,
                                8
                            ],
                            "name": "self",
                            "start": [
                                265,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                265,
                                29
                            ],
                            "name": "on_create",
                            "start": [
                                265,
                                20
                            ],
                            "type": "local",
                            "view": "fun(text: widget.property_text)|nil"
                        }
                    ],
                    "finish": [
                        267,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        265,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_text(on_create: fun(text: widget.property_text)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    265,
                    19
                ],
                "name": "add_text",
                "start": [
                    265,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                277,
                                8
                            ],
                            "name": "self",
                            "start": [
                                277,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                277,
                                32
                            ],
                            "name": "on_create",
                            "start": [
                                277,
                                23
                            ],
                            "type": "local",
                            "view": "fun(vector3: widget.property_vector3)|nil"
                        }
                    ],
                    "finish": [
                        279,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        277,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_vector3(on_create: fun(vector3: widget.property_vector3)|nil)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    277,
                    22
                ],
                "name": "add_vector3",
                "start": [
                    277,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                306,
                                8
                            ],
                            "name": "self",
                            "start": [
                                306,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                306,
                                44
                            ],
                            "name": "create_widget_callback",
                            "start": [
                                306,
                                22
                            ],
                            "type": "local",
                            "view": "fun():druid.widget"
                        }
                    ],
                    "finish": [
                        315,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "start": [
                        306,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:add_widget(create_widget_callback: fun():druid.widget)\n  -> widget.properties_panel"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    306,
                    21
                ],
                "name": "add_widget",
                "start": [
                    306,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        67,
                        5
                    ],
                    "start": [
                        65,
                        20
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    65,
                    17
                ],
                "name": "button_back",
                "start": [
                    65,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        20,
                        36
                    ],
                    "start": [
                        20,
                        24
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                20,
                                36
                            ],
                            "start": [
                                20,
                                24
                            ],
                            "type": "doc.type.name",
                            "view": "druid.button"
                        }
                    ],
                    "view": "druid.button"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    20,
                    36
                ],
                "name": "button_hidden",
                "start": [
                    20,
                    10
                ],
                "type": "doc.field",
                "view": "druid.button",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        72,
                        5
                    ],
                    "start": [
                        70,
                        23
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    70,
                    20
                ],
                "name": "button_refresh",
                "start": [
                    70,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                182,
                                8
                            ],
                            "name": "self",
                            "start": [
                                182,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        186,
                        3
                    ],
                    "start": [
                        182,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:clear()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    182,
                    16
                ],
                "name": "clear",
                "start": [
                    182,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                125,
                                8
                            ],
                            "name": "self",
                            "start": [
                                125,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        148,
                        3
                    ],
                    "start": [
                        125,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:clear_created_properties()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    125,
                    35
                ],
                "name": "clear_created_properties",
                "start": [
                    125,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        19,
                        50
                    ],
                    "start": [
                        19,
                        35
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                19,
                                50
                            ],
                            "start": [
                                19,
                                35
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    19,
                    50
                ],
                "name": "contaienr_scroll_content",
                "start": [
                    19,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        35
                    ],
                    "start": [
                        16,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                16,
                                35
                            ],
                            "start": [
                                16,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    16,
                    35
                ],
                "name": "container",
                "start": [
                    16,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        17,
                        43
                    ],
                    "start": [
                        17,
                        28
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                17,
                                43
                            ],
                            "start": [
                                17,
                                28
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    17,
                    43
                ],
                "name": "container_content",
                "start": [
                    17,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        18,
                        47
                    ],
                    "start": [
                        18,
                        32
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                18,
                                47
                            ],
                            "start": [
                                18,
                                32
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    18,
                    47
                ],
                "name": "container_scroll_view",
                "start": [
                    18,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        33,
                        40
                    ],
                    "start": [
                        33,
                        16
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    33,
                    13
                ],
                "name": "content",
                "start": [
                    33,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                319,
                                8
                            ],
                            "name": "self",
                            "start": [
                                319,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                319,
                                42
                            ],
                            "name": "widget_class",
                            "start": [
                                319,
                                30
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                319,
                                52
                            ],
                            "name": "template",
                            "start": [
                                319,
                                44
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                319,
                                59
                            ],
                            "name": "nodes",
                            "start": [
                                319,
                                54
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        321,
                        3
                    ],
                    "start": [
                        319,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:create_from_prefab(widget_class: any, template: any, nodes: any)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    319,
                    29
                ],
                "name": "create_from_prefab",
                "start": [
                    319,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "private"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        49,
                        22
                    ],
                    "start": [
                        49,
                        21
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    49,
                    18
                ],
                "name": "current_page",
                "start": [
                    49,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        174,
                        39
                    ],
                    "start": [
                        174,
                        21
                    ],
                    "type": "getfield",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    174,
                    18
                ],
                "name": "current_page",
                "start": [
                    174,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        185,
                        22
                    ],
                    "start": [
                        185,
                        21
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    185,
                    18
                ],
                "name": "current_page",
                "start": [
                    185,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        393,
                        42
                    ],
                    "start": [
                        393,
                        21
                    ],
                    "type": "binary",
                    "view": "number"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    393,
                    18
                ],
                "name": "current_page",
                "start": [
                    393,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        407,
                        25
                    ],
                    "start": [
                        407,
                        21
                    ],
                    "type": "getlocal",
                    "view": "number"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    407,
                    18
                ],
                "name": "current_page",
                "start": [
                    407,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        41,
                        46
                    ],
                    "start": [
                        41,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    41,
                    18
                ],
                "name": "default_size",
                "start": [
                    41,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        192,
                        66
                    ],
                    "start": [
                        192,
                        21
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    192,
                    18
                ],
                "name": "default_size",
                "start": [
                    192,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        42,
                        57
                    ],
                    "start": [
                        42,
                        20
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    42,
                    17
                ],
                "name": "header_size",
                "start": [
                    42,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                30,
                                8
                            ],
                            "name": "self",
                            "start": [
                                30,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        94,
                        3
                    ],
                    "start": [
                        30,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:init()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    30,
                    15
                ],
                "name": "init",
                "start": [
                    30,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        106,
                        22
                    ],
                    "start": [
                        106,
                        18
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    106,
                    15
                ],
                "name": "is_dirty",
                "start": [
                    106,
                    2
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        109,
                        23
                    ],
                    "start": [
                        109,
                        19
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    109,
                    16
                ],
                "name": "is_dirty",
                "start": [
                    109,
                    3
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        162,
                        21
                    ],
                    "start": [
                        162,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    162,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    162,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        176,
                        21
                    ],
                    "start": [
                        176,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    176,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    176,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        214,
                        22
                    ],
                    "start": [
                        214,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    214,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    214,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        298,
                        21
                    ],
                    "start": [
                        298,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    298,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    298,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        312,
                        21
                    ],
                    "start": [
                        312,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    312,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    312,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        360,
                        21
                    ],
                    "start": [
                        360,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    360,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    360,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        382,
                        22
                    ],
                    "start": [
                        382,
                        18
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    382,
                    15
                ],
                "name": "is_dirty",
                "start": [
                    382,
                    2
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        394,
                        21
                    ],
                    "start": [
                        394,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    394,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    394,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        408,
                        21
                    ],
                    "start": [
                        408,
                        17
                    ],
                    "type": "boolean",
                    "view": "boolean"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    408,
                    14
                ],
                "name": "is_dirty",
                "start": [
                    408,
                    1
                ],
                "type": "setfield",
                "view": "boolean",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                387,
                                8
                            ],
                            "name": "self",
                            "start": [
                                387,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        389,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "unknown"
                        }
                    ],
                    "start": [
                        387,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:is_hidden()\n  -> unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    387,
                    20
                ],
                "name": "is_hidden",
                "start": [
                    387,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        15,
                        29
                    ],
                    "start": [
                        15,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                15,
                                29
                            ],
                            "start": [
                                15,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.layout"
                        }
                    ],
                    "view": "druid.layout"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    15,
                    29
                ],
                "name": "layout",
                "start": [
                    15,
                    10
                ],
                "type": "doc.field",
                "view": "druid.layout",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                392,
                                8
                            ],
                            "name": "self",
                            "start": [
                                392,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        395,
                        3
                    ],
                    "start": [
                        392,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:load_previous_page()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    392,
                    29
                ],
                "name": "load_previous_page",
                "start": [
                    392,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                151,
                                8
                            ],
                            "name": "self",
                            "start": [
                                151,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        165,
                        3
                    ],
                    "start": [
                        151,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:next_scene()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    151,
                    21
                ],
                "name": "next_scene",
                "start": [
                    151,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                119,
                                8
                            ],
                            "name": "self",
                            "start": [
                                119,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                119,
                                28
                            ],
                            "name": "dx",
                            "start": [
                                119,
                                26
                            ],
                            "type": "local",
                            "view": "any"
                        },
                        {
                            "finish": [
                                119,
                                32
                            ],
                            "name": "dy",
                            "start": [
                                119,
                                30
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        122,
                        3
                    ],
                    "start": [
                        119,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:on_drag_widget(dx: any, dy: any)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    119,
                    25
                ],
                "name": "on_drag_widget",
                "start": [
                    119,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                97,
                                8
                            ],
                            "name": "self",
                            "start": [
                                97,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        99,
                        3
                    ],
                    "start": [
                        97,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:on_remove()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    97,
                    20
                ],
                "name": "on_remove",
                "start": [
                    97,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                189,
                                8
                            ],
                            "name": "self",
                            "start": [
                                189,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                189,
                                35
                            ],
                            "name": "new_size",
                            "start": [
                                189,
                                27
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        206,
                        3
                    ],
                    "start": [
                        189,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:on_size_changed(new_size: any)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    189,
                    26
                ],
                "name": "on_size_changed",
                "start": [
                    189,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        22,
                        55
                    ],
                    "start": [
                        22,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                22,
                                55
                            ],
                            "start": [
                                22,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "widget.property_left_right_selector"
                        }
                    ],
                    "view": "widget.property_left_right_selector"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    22,
                    55
                ],
                "name": "paginator",
                "start": [
                    22,
                    10
                ],
                "type": "doc.field",
                "view": "widget.property_left_right_selector",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                168,
                                8
                            ],
                            "name": "self",
                            "start": [
                                168,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        179,
                        3
                    ],
                    "start": [
                        168,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:previous_scene()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    168,
                    25
                ],
                "name": "previous_scene",
                "start": [
                    168,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "List of created properties",
                "extends": {
                    "finish": [
                        23,
                        35
                    ],
                    "start": [
                        23,
                        21
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                23,
                                35
                            ],
                            "start": [
                                23,
                                21
                            ],
                            "type": "doc.type.array",
                            "view": "druid.widget[]"
                        }
                    ],
                    "view": "druid.widget[]"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    23,
                    35
                ],
                "name": "properties",
                "rawdesc": "List of created properties",
                "start": [
                    23,
                    10
                ],
                "type": "doc.field",
                "view": "druid.widget[]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "List of properties functions to create a new widget. Used to not spawn non-visible widgets but keep the reference",
                "extends": {
                    "finish": [
                        24,
                        41
                    ],
                    "start": [
                        24,
                        34
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                24,
                                41
                            ],
                            "start": [
                                24,
                                34
                            ],
                            "type": "doc.type.array",
                            "view": "fun()[]"
                        }
                    ],
                    "view": "fun()[]"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    24,
                    41
                ],
                "name": "properties_constructors",
                "rawdesc": "List of properties functions to create a new widget. Used to not spawn non-visible widgets but keep the reference",
                "start": [
                    24,
                    10
                ],
                "type": "doc.field",
                "view": "fun()[]",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        50,
                        30
                    ],
                    "start": [
                        50,
                        28
                    ],
                    "type": "integer",
                    "view": "integer"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    50,
                    25
                ],
                "name": "properties_per_page",
                "start": [
                    50,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        400,
                        47
                    ],
                    "start": [
                        400,
                        28
                    ],
                    "type": "getlocal",
                    "view": "number"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    400,
                    25
                ],
                "name": "properties_per_page",
                "start": [
                    400,
                    1
                ],
                "type": "setfield",
                "view": "number",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                337,
                                8
                            ],
                            "name": "self",
                            "start": [
                                337,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                337,
                                24
                            ],
                            "name": "widget",
                            "start": [
                                337,
                                18
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        355,
                        3
                    ],
                    "start": [
                        337,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:remove(widget: any)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    337,
                    17
                ],
                "name": "remove",
                "start": [
                    337,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                420,
                                8
                            ],
                            "name": "self",
                            "start": [
                                420,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                420,
                                32
                            ],
                            "name": "data",
                            "start": [
                                420,
                                28
                            ],
                            "type": "local",
                            "view": "table"
                        }
                    ],
                    "finish": [
                        456,
                        3
                    ],
                    "start": [
                        420,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:render_lua_table(data: table)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    420,
                    27
                ],
                "name": "render_lua_table",
                "start": [
                    420,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        13,
                        19
                    ],
                    "start": [
                        13,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                13,
                                19
                            ],
                            "start": [
                                13,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    13,
                    19
                ],
                "name": "root",
                "start": [
                    13,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        32,
                        43
                    ],
                    "start": [
                        32,
                        19
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    32,
                    16
                ],
                "name": "scale_root",
                "start": [
                    32,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": " To have ability to go back to previous scene, collections of all properties to rebuild",
                "extends": {
                    "finish": [
                        45,
                        17
                    ],
                    "start": [
                        45,
                        15
                    ],
                    "type": "table",
                    "view": "table"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    45,
                    12
                ],
                "name": "scenes",
                "rawdesc": " To have ability to go back to previous scene, collections of all properties to rebuild",
                "start": [
                    45,
                    1
                ],
                "type": "setfield",
                "view": "table",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        14,
                        29
                    ],
                    "start": [
                        14,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                14,
                                29
                            ],
                            "start": [
                                14,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.scroll"
                        }
                    ],
                    "view": "druid.scroll"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    14,
                    29
                ],
                "name": "scroll",
                "start": [
                    14,
                    10
                ],
                "type": "doc.field",
                "view": "druid.scroll",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Force to refresh properties next update",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                359,
                                8
                            ],
                            "name": "self",
                            "start": [
                                359,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "desc": "Force to refresh properties next update",
                    "finish": [
                        361,
                        3
                    ],
                    "rawdesc": "Force to refresh properties next update",
                    "start": [
                        359,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:set_dirty()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    359,
                    20
                ],
                "name": "set_dirty",
                "rawdesc": "Force to refresh properties next update",
                "start": [
                    359,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set a text at left top corner of the properties panel",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                414,
                                8
                            ],
                            "name": "self",
                            "start": [
                                414,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                414,
                                28
                            ],
                            "name": "header",
                            "start": [
                                414,
                                22
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "desc": "Set a text at left top corner of the properties panel",
                    "finish": [
                        416,
                        3
                    ],
                    "rawdesc": "Set a text at left top corner of the properties panel",
                    "start": [
                        414,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:set_header(header: string)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    414,
                    21
                ],
                "name": "set_header",
                "rawdesc": "Set a text at left top corner of the properties panel",
                "start": [
                    414,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                364,
                                8
                            ],
                            "name": "self",
                            "start": [
                                364,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                364,
                                31
                            ],
                            "name": "is_hidden",
                            "start": [
                                364,
                                22
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        384,
                        3
                    ],
                    "start": [
                        364,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:set_hidden(is_hidden: any)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    364,
                    21
                ],
                "name": "set_hidden",
                "start": [
                    364,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "desc": "Set a page of current scene",
                "extends": {
                    "args": [
                        {
                            "finish": [
                                406,
                                8
                            ],
                            "name": "self",
                            "start": [
                                406,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                406,
                                24
                            ],
                            "name": "page",
                            "start": [
                                406,
                                20
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "desc": "Set a page of current scene",
                    "finish": [
                        409,
                        3
                    ],
                    "rawdesc": "Set a page of current scene",
                    "start": [
                        406,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:set_page(page: number)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    406,
                    19
                ],
                "name": "set_page",
                "rawdesc": "Set a page of current scene",
                "start": [
                    406,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                399,
                                8
                            ],
                            "name": "self",
                            "start": [
                                399,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                399,
                                54
                            ],
                            "name": "properties_per_page",
                            "start": [
                                399,
                                35
                            ],
                            "type": "local",
                            "view": "number"
                        }
                    ],
                    "finish": [
                        401,
                        3
                    ],
                    "start": [
                        399,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:set_properties_per_page(properties_per_page: number)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    399,
                    34
                ],
                "name": "set_properties_per_page",
                "start": [
                    399,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        21,
                        32
                    ],
                    "start": [
                        21,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                21,
                                32
                            ],
                            "start": [
                                21,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    21,
                    32
                ],
                "name": "text_header",
                "start": [
                    21,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                102,
                                8
                            ],
                            "name": "self",
                            "start": [
                                102,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        }
                    ],
                    "finish": [
                        116,
                        3
                    ],
                    "start": [
                        102,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:toggle_auto_refresh()"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    102,
                    30
                ],
                "name": "toggle_auto_refresh",
                "start": [
                    102,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                209,
                                8
                            ],
                            "name": "self",
                            "start": [
                                209,
                                8
                            ],
                            "type": "self",
                            "view": "widget.properties_panel"
                        },
                        {
                            "finish": [
                                209,
                                20
                            ],
                            "name": "dt",
                            "start": [
                                209,
                                18
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        233,
                        3
                    ],
                    "start": [
                        209,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.properties_panel:update(dt: any)"
                },
                "file": "widget/insality/properties_panel/properties_panel.lua",
                "finish": [
                    209,
                    17
                ],
                "name": "update",
                "start": [
                    209,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            }
        ],
        "name": "widget.properties_panel",
        "type": "type",
        "view": "widget.properties_panel"
    },
    {
        "defines": [
            {
                "async": false,
                "deprecated": false,
                "extends": [
                    {
                        "finish": [
                            2,
                            46
                        ],
                        "start": [
                            2,
                            34
                        ],
                        "type": "doc.extends.name",
                        "view": "druid.widget"
                    }
                ],
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    2,
                    46
                ],
                "start": [
                    2,
                    10
                ],
                "type": "doc.class",
                "view": "widget.property_button",
                "visible": "public"
            }
        ],
        "fields": [
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        6,
                        29
                    ],
                    "start": [
                        6,
                        17
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                6,
                                29
                            ],
                            "start": [
                                6,
                                17
                            ],
                            "type": "doc.type.name",
                            "view": "druid.button"
                        }
                    ],
                    "view": "druid.button"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    6,
                    29
                ],
                "name": "button",
                "start": [
                    6,
                    10
                ],
                "type": "doc.field",
                "view": "druid.button",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        4,
                        35
                    ],
                    "start": [
                        4,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                4,
                                35
                            ],
                            "start": [
                                4,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.container"
                        }
                    ],
                    "view": "druid.container"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    4,
                    35
                ],
                "name": "container",
                "start": [
                    4,
                    10
                ],
                "type": "doc.field",
                "view": "druid.container",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                11,
                                8
                            ],
                            "name": "self",
                            "start": [
                                11,
                                8
                            ],
                            "type": "self",
                            "view": "widget.property_button"
                        }
                    ],
                    "finish": [
                        27,
                        3
                    ],
                    "start": [
                        11,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.property_button:init()"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    11,
                    15
                ],
                "name": "init",
                "start": [
                    11,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                30,
                                8
                            ],
                            "name": "self",
                            "start": [
                                30,
                                8
                            ],
                            "type": "self",
                            "view": "widget.property_button"
                        }
                    ],
                    "finish": [
                        33,
                        3
                    ],
                    "start": [
                        30,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.property_button:on_click()"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    30,
                    19
                ],
                "name": "on_click",
                "start": [
                    30,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        3,
                        19
                    ],
                    "start": [
                        3,
                        15
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                3,
                                19
                            ],
                            "start": [
                                3,
                                15
                            ],
                            "type": "doc.type.name",
                            "view": "node"
                        }
                    ],
                    "view": "node"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    3,
                    19
                ],
                "name": "root",
                "start": [
                    3,
                    10
                ],
                "type": "doc.field",
                "view": "node",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        16,
                        42
                    ],
                    "start": [
                        16,
                        17
                    ],
                    "type": "select",
                    "view": "unknown"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    16,
                    14
                ],
                "name": "selected",
                "start": [
                    16,
                    1
                ],
                "type": "setfield",
                "view": "unknown",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                60,
                                8
                            ],
                            "name": "self",
                            "start": [
                                60,
                                8
                            ],
                            "type": "self",
                            "view": "widget.property_button"
                        },
                        {
                            "finish": [
                                60,
                                32
                            ],
                            "name": "color_value",
                            "start": [
                                60,
                                21
                            ],
                            "type": "local",
                            "view": "any"
                        }
                    ],
                    "finish": [
                        62,
                        3
                    ],
                    "start": [
                        60,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.property_button:set_color(color_value: any)"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    60,
                    20
                ],
                "name": "set_color",
                "start": [
                    60,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                54,
                                8
                            ],
                            "name": "self",
                            "start": [
                                54,
                                8
                            ],
                            "type": "self",
                            "view": "widget.property_button"
                        },
                        {
                            "finish": [
                                54,
                                30
                            ],
                            "name": "enabled",
                            "start": [
                                54,
                                23
                            ],
                            "type": "local",
                            "view": "boolean"
                        }
                    ],
                    "finish": [
                        57,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_button"
                        }
                    ],
                    "start": [
                        54,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.property_button:set_enabled(enabled: boolean)\n  -> druid.widget.property_button"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    54,
                    22
                ],
                "name": "set_enabled",
                "start": [
                    54,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                46,
                                8
                            ],
                            "name": "self",
                            "start": [
                                46,
                                8
                            ],
                            "type": "self",
                            "view": "widget.property_button"
                        },
                        {
                            "finish": [
                                46,
                                31
                            ],
                            "name": "text",
                            "start": [
                                46,
                                27
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        49,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_button"
                        }
                    ],
                    "start": [
                        46,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.property_button:set_text_button(text: string)\n  -> druid.widget.property_button"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    46,
                    26
                ],
                "name": "set_text_button",
                "start": [
                    46,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "args": [
                        {
                            "finish": [
                                38,
                                8
                            ],
                            "name": "self",
                            "start": [
                                38,
                                8
                            ],
                            "type": "self",
                            "view": "widget.property_button"
                        },
                        {
                            "finish": [
                                38,
                                33
                            ],
                            "name": "text",
                            "start": [
                                38,
                                29
                            ],
                            "type": "local",
                            "view": "string"
                        }
                    ],
                    "finish": [
                        41,
                        3
                    ],
                    "returns": [
                        {
                            "type": "function.return",
                            "view": "druid.widget.property_button"
                        }
                    ],
                    "start": [
                        38,
                        0
                    ],
                    "type": "function",
                    "view": "(method) widget.property_button:set_text_property(text: string)\n  -> druid.widget.property_button"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    38,
                    28
                ],
                "name": "set_text_property",
                "start": [
                    38,
                    9
                ],
                "type": "setmethod",
                "view": "function",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        7,
                        32
                    ],
                    "start": [
                        7,
                        22
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                7,
                                32
                            ],
                            "start": [
                                7,
                                22
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    7,
                    32
                ],
                "name": "text_button",
                "start": [
                    7,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            },
            {
                "async": false,
                "deprecated": false,
                "extends": {
                    "finish": [
                        5,
                        30
                    ],
                    "start": [
                        5,
                        20
                    ],
                    "type": "doc.type",
                    "types": [
                        {
                            "finish": [
                                5,
                                30
                            ],
                            "start": [
                                5,
                                20
                            ],
                            "type": "doc.type.name",
                            "view": "druid.text"
                        }
                    ],
                    "view": "druid.text"
                },
                "file": "widget/insality/properties_panel/properties/property_button.lua",
                "finish": [
                    5,
                    30
                ],
                "name": "text_name",
                "start": [
                    5,
                    10
                ],
                "type": "doc.field",
                "view": "druid.text",
                "visible": "public"
            }
        ],
        "name": "widget.property_button",
        "type": "type",
        "view": "widget.property_button"
    }
]